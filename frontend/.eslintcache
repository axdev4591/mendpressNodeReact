[{"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\serviceWorker.js":"1","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\CartPrice\\index.js":"2","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\UI\\NormalInput\\index.js":"3","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\ShopStore\\Products\\Products.js":"4","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\index.js":"5","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\PrivateRoute.js":"6","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\store\\reducers\\authReducers.js":"7","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\store\\reducers\\productReducers.js":"8","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\store\\reducers\\cartReducers.js":"9","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\ControlPanel\\index.js":"10","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Login\\index.js":"11","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\ForgetPassword\\index.js":"12","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Home\\index.js":"13","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\ProductDetails\\index.js":"14","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\PlaceOrder\\index.js":"15","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Orders\\index.js":"16","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\store\\actions\\cartActions.js":"17","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\Header\\Header.js":"18","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\constants\\index.js":"19","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\UI\\MobileTypeInput\\index.js":"20","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\UI\\RadioButton\\index.js":"21","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\Header\\TopHeader\\TopHeader.js":"22","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\ShopStore\\Products\\Product\\index.js":"23","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\App.js":"24","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\ThankYou\\index.js":"25","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Shop\\index.js":"26","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\store\\actions\\productActions.js":"27","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\PlaceOrder\\AddressForm\\index.js":"28","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\UI\\SubmitGradientButton\\index.js":"29","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\Header\\BottomHeader\\BottomHeader.js":"30","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Cart\\index.js":"31","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\store\\actions\\authActions.js":"32","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\Logo\\index.js":"33","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\ShopStore\\ShopStore.js":"34","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\PlaceOrder\\DeliveryAddress\\index.js":"35","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Cart\\CartItem\\index.js":"36","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\Header\\MainHeader\\MainHeader.js":"37","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Signup\\index.js":"38","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\Error\\index.js":"39","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\QuantityControl\\index.js":"40","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Products\\ProductsScreen.js":"41","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Products\\ProductsActions.js":"42","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Products\\ProductsConstants.js":"43","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Products\\ProdReducer.js":"44","C:\\projects\\NodeJS\\mdp\\frontend\\src\\serviceWorker.js":"45","C:\\projects\\NodeJS\\mdp\\frontend\\src\\containers\\Login\\index.js":"46","C:\\projects\\NodeJS\\mdp\\frontend\\src\\containers\\Cart\\index.js":"47","C:\\projects\\NodeJS\\mdp\\frontend\\src\\containers\\Signup\\index.js":"48","C:\\projects\\NodeJS\\mdp\\frontend\\src\\store\\actions\\productActions.js":"49","C:\\projects\\NodeJS\\mdp\\frontend\\src\\constants\\index.js":"50","C:\\projects\\NodeJS\\mdp\\frontend\\src\\containers\\PlaceOrder\\DeliveryAddress\\index.js":"51","C:\\projects\\NodeJS\\mdp\\frontend\\src\\components\\UI\\SubmitGradientButton\\index.js":"52","C:\\projects\\NodeJS\\mdp\\frontend\\src\\components\\UI\\RadioButton\\index.js":"53","C:\\projects\\NodeJS\\mdp\\frontend\\src\\components\\Header\\BottomHeader\\BottomHeader.js":"54","C:\\projects\\NodeJS\\mdp\\frontend\\src\\components\\Logo\\index.js":"55","C:\\projects\\NodeJS\\mdp\\frontend\\src\\containers\\App.js":"56","C:\\projects\\NodeJS\\mdp\\frontend\\src\\components\\Header\\TopHeader\\TopHeader.js":"57","C:\\projects\\NodeJS\\mdp\\frontend\\src\\components\\Header\\MainHeader\\MainHeader.js":"58","C:\\projects\\NodeJS\\mdp\\frontend\\src\\components\\CartPrice\\index.js":"59","C:\\projects\\NodeJS\\mdp\\frontend\\src\\containers\\ProductDetails\\index.js":"60","C:\\projects\\NodeJS\\mdp\\frontend\\src\\store\\reducers\\productReducers.js":"61","C:\\projects\\NodeJS\\mdp\\frontend\\src\\store\\actions\\cartActions.js":"62","C:\\projects\\NodeJS\\mdp\\frontend\\src\\store\\reducers\\cartReducers.js":"63","C:\\projects\\NodeJS\\mdp\\frontend\\src\\containers\\Products\\ProductsScreen.js":"64","C:\\projects\\NodeJS\\mdp\\frontend\\src\\containers\\Cart\\CartItem\\index.js":"65","C:\\projects\\NodeJS\\mdp\\frontend\\src\\containers\\PlaceOrder\\index.js":"66","C:\\projects\\NodeJS\\mdp\\frontend\\src\\components\\Header\\Header.js":"67","C:\\projects\\NodeJS\\mdp\\frontend\\src\\containers\\Orders\\index.js":"68","C:\\projects\\NodeJS\\mdp\\frontend\\src\\store\\reducers\\userReducers.js":"69","C:\\projects\\NodeJS\\mdp\\frontend\\src\\PrivateRoute.js":"70","C:\\projects\\NodeJS\\mdp\\frontend\\src\\components\\ShopStore\\Products\\Product\\index.js":"71","C:\\projects\\NodeJS\\mdp\\frontend\\src\\constants\\productConstants.js":"72","C:\\projects\\NodeJS\\mdp\\frontend\\src\\components\\ShopStore\\Products\\Products.js":"73","C:\\projects\\NodeJS\\mdp\\frontend\\src\\components\\ShopStore\\ShopStore.js":"74","C:\\projects\\NodeJS\\mdp\\frontend\\src\\containers\\Home\\index.js":"75","C:\\projects\\NodeJS\\mdp\\frontend\\src\\components\\Error\\index.js":"76","C:\\projects\\NodeJS\\mdp\\frontend\\src\\containers\\PlaceOrder\\AddressForm\\index.js":"77","C:\\projects\\NodeJS\\mdp\\frontend\\src\\components\\QuantityControl\\index.js":"78","C:\\projects\\NodeJS\\mdp\\frontend\\src\\store\\actions\\userActions.js":"79","C:\\projects\\NodeJS\\mdp\\frontend\\src\\index.js":"80","C:\\projects\\NodeJS\\mdp\\frontend\\src\\constants\\cartConstants.js":"81","C:\\projects\\NodeJS\\mdp\\frontend\\src\\constants\\userConstants.js":"82","C:\\projects\\NodeJS\\mdp\\frontend\\src\\components\\UI\\MobileTypeInput\\index.js":"83","C:\\projects\\NodeJS\\mdp\\frontend\\src\\containers\\ForgetPassword\\index.js":"84","C:\\projects\\NodeJS\\mdp\\frontend\\src\\components\\UI\\NormalInput\\index.js":"85","C:\\projects\\NodeJS\\mdp\\frontend\\src\\containers\\ControlPanel\\index.js":"86","C:\\projects\\NodeJS\\mdp\\frontend\\src\\containers\\ThankYou\\index.js":"87"},{"size":4951,"mtime":1572103982000,"results":"88","hashOfConfig":"89"},{"size":1153,"mtime":1609931754634,"results":"90","hashOfConfig":"89"},{"size":1232,"mtime":1572103982000,"results":"91","hashOfConfig":"89"},{"size":4689,"mtime":1609536333920,"results":"92","hashOfConfig":"89"},{"size":463,"mtime":1572103982000,"results":"93","hashOfConfig":"89"},{"size":629,"mtime":1572103982000,"results":"94","hashOfConfig":"89"},{"size":737,"mtime":1609690457158,"results":"95","hashOfConfig":"89"},{"size":639,"mtime":1572103982000,"results":"96","hashOfConfig":"89"},{"size":3410,"mtime":1609437890641,"results":"97","hashOfConfig":"89"},{"size":259,"mtime":1572103982000,"results":"98","hashOfConfig":"89"},{"size":4656,"mtime":1609973103439,"results":"99","hashOfConfig":"89"},{"size":1812,"mtime":1609973216298,"results":"100","hashOfConfig":"89"},{"size":369,"mtime":1609695267634,"results":"101","hashOfConfig":"89"},{"size":7040,"mtime":1609931532389,"results":"102","hashOfConfig":"89"},{"size":14850,"mtime":1609786467160,"results":"103","hashOfConfig":"89"},{"size":7832,"mtime":1610135139232,"results":"104","hashOfConfig":"89"},{"size":2814,"mtime":1572103982000,"results":"105","hashOfConfig":"89"},{"size":1719,"mtime":1609695496573,"results":"106","hashOfConfig":"89"},{"size":48,"mtime":1572103982000,"results":"107","hashOfConfig":"89"},{"size":424,"mtime":1572103982000,"results":"108","hashOfConfig":"89"},{"size":394,"mtime":1572103982000,"results":"109","hashOfConfig":"89"},{"size":3098,"mtime":1609793097989,"results":"110","hashOfConfig":"89"},{"size":687,"mtime":1609886091921,"results":"111","hashOfConfig":"89"},{"size":2539,"mtime":1610041981947,"results":"112","hashOfConfig":"89"},{"size":835,"mtime":1609449167666,"results":"113","hashOfConfig":"89"},{"size":254,"mtime":1572103982000,"results":"114","hashOfConfig":"89"},{"size":1952,"mtime":1609536320374,"results":"115","hashOfConfig":"89"},{"size":4792,"mtime":1572103982000,"results":"116","hashOfConfig":"89"},{"size":356,"mtime":1572103982000,"results":"117","hashOfConfig":"89"},{"size":2202,"mtime":1609932739130,"results":"118","hashOfConfig":"89"},{"size":5547,"mtime":1609439477855,"results":"119","hashOfConfig":"89"},{"size":3165,"mtime":1609709798170,"results":"120","hashOfConfig":"89"},{"size":355,"mtime":1610021687343,"results":"121","hashOfConfig":"89"},{"size":1077,"mtime":1609795858411,"results":"122","hashOfConfig":"89"},{"size":974,"mtime":1572103982000,"results":"123","hashOfConfig":"89"},{"size":1294,"mtime":1609931882708,"results":"124","hashOfConfig":"89"},{"size":1242,"mtime":1609932222215,"results":"125","hashOfConfig":"89"},{"size":7140,"mtime":1609973043691,"results":"126","hashOfConfig":"89"},{"size":141,"mtime":1572103982000,"results":"127","hashOfConfig":"89"},{"size":617,"mtime":1572103982000,"results":"128","hashOfConfig":"89"},{"size":11137,"mtime":1610292917706,"results":"129","hashOfConfig":"89"},{"size":5961,"mtime":1610288752713,"results":"130","hashOfConfig":"89"},{"size":1224,"mtime":1610042386146,"results":"131","hashOfConfig":"89"},{"size":3329,"mtime":1610061823347,"results":"132","hashOfConfig":"89"},{"size":4951,"mtime":1572103982000,"results":"133","hashOfConfig":"134"},{"size":2814,"mtime":1610661961149,"results":"135","hashOfConfig":"134"},{"size":4545,"mtime":1610921706246,"results":"136","hashOfConfig":"134"},{"size":5406,"mtime":1610808239591,"results":"137","hashOfConfig":"134"},{"size":6928,"mtime":1610913307397,"results":"138","hashOfConfig":"134"},{"size":48,"mtime":1572103982000,"results":"139","hashOfConfig":"134"},{"size":974,"mtime":1572103982000,"results":"140","hashOfConfig":"134"},{"size":356,"mtime":1572103982000,"results":"141","hashOfConfig":"134"},{"size":394,"mtime":1572103982000,"results":"142","hashOfConfig":"134"},{"size":2030,"mtime":1610574391567,"results":"143","hashOfConfig":"134"},{"size":355,"mtime":1610021687343,"results":"144","hashOfConfig":"134"},{"size":3032,"mtime":1610922024296,"results":"145","hashOfConfig":"134"},{"size":2769,"mtime":1610825056547,"results":"146","hashOfConfig":"134"},{"size":1132,"mtime":1610897663551,"results":"147","hashOfConfig":"134"},{"size":1155,"mtime":1610310382588,"results":"148","hashOfConfig":"134"},{"size":4571,"mtime":1610909645682,"results":"149","hashOfConfig":"134"},{"size":3660,"mtime":1610465433836,"results":"150","hashOfConfig":"134"},{"size":3398,"mtime":1610913267254,"results":"151","hashOfConfig":"134"},{"size":3436,"mtime":1610912939762,"results":"152","hashOfConfig":"134"},{"size":10895,"mtime":1610370735281,"results":"153","hashOfConfig":"134"},{"size":1835,"mtime":1610922207014,"results":"154","hashOfConfig":"134"},{"size":13594,"mtime":1610373924768,"results":"155","hashOfConfig":"134"},{"size":1189,"mtime":1610913417664,"results":"156","hashOfConfig":"134"},{"size":6884,"mtime":1610373261821,"results":"157","hashOfConfig":"134"},{"size":1391,"mtime":1610359890213,"results":"158","hashOfConfig":"134"},{"size":615,"mtime":1610921593760,"results":"159","hashOfConfig":"134"},{"size":1348,"mtime":1610647012116,"results":"160","hashOfConfig":"134"},{"size":1194,"mtime":1610350041910,"results":"161","hashOfConfig":"134"},{"size":3850,"mtime":1610642378410,"results":"162","hashOfConfig":"134"},{"size":1126,"mtime":1610631340802,"results":"163","hashOfConfig":"134"},{"size":326,"mtime":1610574080783,"results":"164","hashOfConfig":"134"},{"size":141,"mtime":1572103982000,"results":"165","hashOfConfig":"134"},{"size":4792,"mtime":1572103982000,"results":"166","hashOfConfig":"134"},{"size":617,"mtime":1572103982000,"results":"167","hashOfConfig":"134"},{"size":2299,"mtime":1610913305207,"results":"168","hashOfConfig":"134"},{"size":495,"mtime":1610373610282,"results":"169","hashOfConfig":"134"},{"size":385,"mtime":1610816319908,"results":"170","hashOfConfig":"134"},{"size":560,"mtime":1600537978000,"results":"171","hashOfConfig":"134"},{"size":425,"mtime":1610661828598,"results":"172","hashOfConfig":"134"},{"size":1812,"mtime":1609973216298,"results":"173","hashOfConfig":"134"},{"size":1232,"mtime":1572103982000,"results":"174","hashOfConfig":"134"},{"size":259,"mtime":1572103982000,"results":"175","hashOfConfig":"134"},{"size":835,"mtime":1609449167666,"results":"176","hashOfConfig":"134"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},"1fusxmn",{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"182"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"182"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"182"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"182"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"182"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"182"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"182"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"182"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"182"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"182"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"182"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"182"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"282"},"10m09uw",{"filePath":"283","messages":"284","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"285","messages":"286","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"287","messages":"288","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"289","messages":"290","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"306","messages":"307","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"308","messages":"309","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"321","messages":"322","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"293"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"326","messages":"327","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"316"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"331","messages":"332","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"316"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"338","messages":"339","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"344","messages":"345","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"346","messages":"347","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"350"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"293"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"357","messages":"358","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"316"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"350"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\serviceWorker.js",[],["374","375"],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\CartPrice\\index.js",[],["376","377"],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\UI\\NormalInput\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\ShopStore\\Products\\Products.js",["378","379","380"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as productActions from '../../../store/actions/productActions';\nimport { connect } from 'react-redux';\nimport './style.css';\nimport Product from './Product';\n\nclass Products extends Component{\n\n    state = {\n        slug: 'Toutes Nos Oeuvres'\n    }\n\n    componentDidMount() {\n        const slug = this.props.match.params.slug  == 'Toutes Nos Oeuvres' ? '' : this.props.match.params.slug\n        this.getProducts(slug);\n        this.props.getCategories();\n    }\n\n    getProducts = (categorySlug = '', filter = null) => {\n       \n        this.props.getProducts(categorySlug, filter)\n        .then(response => {\n\n            console.log(\"aahaha\"+response);\n\n            this.setState({\n                 products: response.message\n           })\n        });\n    }\n\n    componentDidUpdate(prevProps){\n        if(this.props.match.params.slug != prevProps.match.params.slug){\n            this.getProducts(this.props.match.params.slug);\n        }\n\n        \n    }\n\n    applyFilter = (filter) => {\n        const slug = this.props.match.params.slug == 'Toutes Nos Oeuvres' ? '' : this.props.match.params.slug\n        this.getProducts(slug, filter);\n    }\n\n    categoryTree(categories){\n        var categoriesAr = [];\n        for(var value of categories){\n\n            categoriesAr.push(\n                    <li key={value.slug}>\n                        <Link to={`/products/${value.slug}`}>{value.name}</Link>\n                        {value.children.length > 0 ? (<ul>{this.categoryTree(value.children)}</ul>) : null}\n                    </li>\n            );\n        }\n\n        return categoriesAr;\n    }\n\n    render() {\n\n        const slug = Object.keys(this.props.match.params).length > 0 ? this.props.match.params.slug : this.state.slug;\n\n        \n        \n        return (\n\n            <div className=\"Content\">\n                    <div className=\"ContentTitle\">\n                        <h2 className=\"CategoryTitle\">{slug}</h2>\n                    </div>\n                    <div className=\"ContentBody\">\n                        <div className=\"SideMenu\">\n                            <h3 className=\"SideMenuTitle\">Filtres</h3>\n                            <div className=\"Filter\">\n                                <p className=\"FilterTitle\">Categories</p>\n                                <ul>\n                                    {\n                                        this.props.products.categories.length > 0 ? \n                                        this.categoryTree(this.props.products.categories) : null\n                                    }\n                                </ul>\n                            </div>\n                            \n                           <div style={{marginTop: \"12px\"}} className=\"Filter\">\n                               <p className=\"FilterTitle\">Prix</p>\n                               <div>\n                                <button onClick={() => this.applyFilter({price:1} )} className=\"FilterButton\">Tri croissant</button>\n                               </div>\n                               <div>\n                                    <button onClick={() => this.applyFilter({price: -1})} className=\"FilterButton\">Tri décroissant</button>\n                               </div>\n                               \n                           </div>\n                       \n                        </div>\n                        \n                        <div className=\"MainContent\">\n\n                        <div className=\"ProductArea\">\n                            {\n                                this.props.products.products.map(product => <Product\n                                    key={product._id}\n                                    id={product._id}\n                                    name={product.name}\n                                    price={product.price}\n                                    imageUrl={product.imageUrl}\n                                    slug={product.slug}\n                                />)\n                            }\n                            \n                        </div>\n\n                            \n                        </div>\n\n                    </div>\n                </div>\n            \n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getProducts: (categorySlug, filter) => dispatch(productActions.getProducts(categorySlug, filter)),\n        getCategories: () => dispatch(productActions.getCategories())\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        products: state.products\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\PrivateRoute.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\store\\reducers\\authReducers.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\store\\reducers\\productReducers.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\store\\reducers\\cartReducers.js",["381"],"import { ADD_TO_CART, GET_CART_DETAILS, UPDATE_CART, CLEAR_CART } from \"../actions/cartActions\"\n\nconst initState = {\n    cartItem: [],\n    totalAmount: 0,\n    cartCount: 0\n}\n\nconst cartReducers = (state = initState, actions) => {\n    switch(actions.type){\n        case ADD_TO_CART:\n            const cartItem = state.cartItem;\n            let updatedCartItem = [];\n            let totalAmount;\n\n            const itemCount = state.cartItem.filter(item => item.product === actions.cartItem.product);\n\n            if(itemCount.length === 0){\n                updatedCartItem = [\n                    ...cartItem,\n                    {\n                        product: actions.cartItem.product,\n                        name: actions.cartItem.name,\n                        imageUrl: actions.cartItem.imageUrl,\n                        price: actions.cartItem.price,\n                        quantity: actions.cartItem.quantity,\n                        total: actions.cartItem.quantity * actions.cartItem.price\n                    }\n                ];\n            }else{\n                updatedCartItem = cartItem.map(item => \n                    item.product === actions.cartItem.product ?\n                    {\n                        ...item,\n                        quantity: item.quantity + actions.cartItem.quantity,\n                        total: item.total + actions.cartItem.price\n                    } : item\n                    )\n            }\n            totalAmount = state.totalAmount + actions.cartItem.price\n            state = {\n                cartItem: updatedCartItem,\n                totalAmount: totalAmount,\n                cartCount: state.cartCount + 1\n            }\n            break;\n        case GET_CART_DETAILS:\n            const cItem = actions.cartItems.cart;\n            let totalAmt = 0;\n            let quantityCount = 0;\n            const updateCartItem = cItem.map(item => {\n                totalAmt += item.total;\n                quantityCount += item.quantity;\n                return {\n                    product: item.product._id,\n                    name: item.product.name,\n                    imageUrl: item.product.imageUrl,\n                    price: item.price,\n                    quantity: item.quantity,\n                    total: item.total\n                }\n            })\n            state = {\n                cartItem: updateCartItem,\n                totalAmount: totalAmt,\n                cartCount: quantityCount\n            }\n            break;\n        case UPDATE_CART:\n            const updateItem = actions.item;\n            const cartItems = state.cartItem.map(item => {\n                return item.product === updateItem.productId ? \n                {\n                    ...item,\n                    quantity: updateItem.quantity,\n                    total: updateItem.total\n                } : item\n            });\n            state = {\n                cartItem: cartItems,\n                totalAmount: parseFloat(state.totalAmount) + parseFloat(updateItem.price * updateItem.newQuantity),\n                cartCount: parseInt(state.cartCount) + parseInt(updateItem.newQuantity)\n            }\n            break;\n        case CLEAR_CART:\n            state = {\n                cartItem: [],\n                totalAmount: 0,\n                cartCount: 0\n            }\n        default:\n            break;\n    }\n\n    return state;\n}\n\nexport default cartReducers;","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\ControlPanel\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Login\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\ForgetPassword\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Home\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\ProductDetails\\index.js",["382"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Header from '../../components/Header/Header';\nimport { connect } from 'react-redux';\nimport * as cartActions from '../../store/actions/cartActions';\nimport * as authActions from '../../store/actions/authActions';\n\nimport './style.css';\nimport { base_url } from '../../constants';\n\nclass ProductDetails extends Component{\n\n    state = {\n        product: null,\n        redirectToReferrer: false\n    }\n\n    componentDidMount() {\n\n        if(!this.props.auth.isAuthenticated){\n            this.props.getToken()\n            .then(result => {\n                if(result){\n                    this.props.getCartItems(this.props.auth.token, this.props.auth.user.userId)\n                    .then(response => {\n                        console.log(response);\n                    })\n                    .catch(error => {\n                        console.log(error);\n                    })\n                }\n            })\n            .catch(error => {\n                console.log(error);\n            })\n        }\n\n                \n\n        \n        const { category, slug } = this.props.match.params;\n        fetch(`${base_url}/products/${category}/${slug}`)\n        .then(response => response.json())\n        .then(jsonResponse => {\n\n            if(jsonResponse.hasOwnProperty('message')){\n                console.log(jsonResponse);\n                this.setState({\n                    product: jsonResponse.message\n                })\n            }\n\n        })\n        .catch(error => {\n            console.log(error);\n        });\n\n\n\n    }\n\n    addToCart = (productId, price, name, imageUrl) => {\n\n        if(!this.props.auth.isAuthenticated){\n            this.props.history.push('/login');\n            return;\n        }\n\n        const { auth } = this.props;\n        const cartItem = {\n            user: auth.user.userId,\n            product: productId,\n            name: name,\n            imageUrl: imageUrl,\n            quantity: 1,\n            price: price\n        }\n        this.props.addToCart(auth.token, cartItem)\n        .then(response => {\n            //console.log(response);\n            console.log(this.props.cart);\n        })\n        .catch(error => {\n            console.log(error);\n        });\n    }\n\n    render(){\n\n        const { product } = this.state;\n\n        let productDescription;\n\n        if(this.state.product){\n            productDescription = \n                <div style={{marginBottom: \"12px\"}} className=\"Content\">\n                    <div style={{marginTop: \"12px\"}} className=\"ProductDetailsWrapper\">\n                        <div className=\"ProductDetailsImage\">\n                            <div className=\"ProductDetailsImageWrapper\">\n                                <img src={product.imageUrl} alt=\"\" />\n                            </div>\n                            <div className=\"ActionButtonWrapper\">\n                                <button  style={{background: '#483D8B'}} onClick={() => { this.addToCart(product._id, product.price, product.name, product.imageUrl) }}><i className=\"fas fa-shopping-cart\"></i>&nbsp;Ajouter au panier</button>\n                                <button style={{background: '#483D8B'}}><i className=\"fas fa-bolt\"></i>&nbsp;Acheter maintenant</button>\n                            </div>\n                        </div>\n                        <div className=\"ProductDetails\">\n                            <div className=\"BreadCrumb\">\n                                <small>Bonne lecture</small>\n                            </div>\n                            <p className=\"ProductTitle\">{product.name}</p>\n                            <p className=\"ProductPrice\">{product.price}€</p>\n                            <div className=\"ProductDescription\">\n                                <h3>Description</h3>\n                                <p>{product.description}</p>\n                            </div>\n                        </div>\n                    </div>\n                {/*   \n                    <div className=\"SimilarProducts\">\n                        <h3>Similar Products</h3>\n                        <div className=\"SimilarProductsWrapper\">\n                            \n                            <div className=\"SimilarProduct\">\n                                <div className=\"SimilarProductImage\">\n                                    <img src=\"https://rukminim1.flixcart.com/image/312/312/jxz0brk0/mobile/u/u/v/realme-3i-rmx1827-original-imafgbbkzrgsstkj.jpeg?q=70\" alt=\"\"/>\n                                </div>\n                                <div className=\"SimilarProductDetails\">\n                                    <h5>Product Name</h5>\n                                    <p>$ 36521</p>\n                                </div>\n                            </div>\n\n                            <div className=\"SimilarProduct\">\n                                <div className=\"SimilarProductImage\">\n                                    <img src=\"https://rukminim1.flixcart.com/image/312/312/jzrb53k0pkrrdj/mobile/e/s/j/mi-redmi-7a-mzb8008in-original-imafg27hramfktfs.jpeg?q=70\" alt=\"\"/>\n                                </div>\n                                <div className=\"SimilarProductDetails\">\n                                    <h5>Product Name</h5>\n                                    <p>$ 36521</p>\n                                </div>\n                            </div>\n                            \n                            <div className=\"SimilarProduct\">\n                                <div className=\"SimilarProductImage\">\n                                    <img src=\"https://rukminim1.flixcart.com/image/495/594/jxgflow0/t-shirt/y/h/g/xxl-tnvgyvnful-d22-tripr-original-imafhuq2s3yxbx2t.jpeg?q=50\" alt=\"\"/>\n                                </div>\n                                <div className=\"SimilarProductDetails\">\n                                    <h5>Product Name</h5>\n                                    <p>$ 36521</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"ProductReviews\">\n                        <h3>Product Reviews</h3>\n                    </div>\n                */}\n                </div>\n        }else{\n            productDescription = <div>Product is loading...!</div>\n        }\n        \n        \n\n        return (\n            <div>\n                <Header/>\n                {productDescription}\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        auth: state.auth,\n        cart: state.cart\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addToCart: (token, cartItem) => dispatch(cartActions.addToCart(token, cartItem)),\n        getCartItems: (token, userId) => dispatch(cartActions.getCartItems(token, userId)),\n        getToken: () => dispatch(authActions.getToken())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDetails);","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\PlaceOrder\\index.js",["383","384"],"import React, { Component } from 'react';\nimport Header from '../../components/Header/Header';\nimport './style.css';\nimport NormalInput from '../../components/UI/NormalInput';\nimport * as authActions from '../../store/actions/authActions';\nimport { connect } from 'react-redux';\nimport AddressForm from './AddressForm';\nimport CartPrice from '../../components/CartPrice';\nimport DeliveryAddress from './DeliveryAddress';\nimport RadioButton from '../../components/UI/RadioButton';\nimport * as cartActions from '../../store/actions/cartActions';\nimport { base_url } from '../../constants';\n\nclass PlaceOrder extends Component{\n\n    state = {\n        addresses: [],\n        address: {\n            fullName: \"\",\n            mobileNumber: \"\",\n            pinCode: \"\",\n            locality: \"\",\n            address: \"\",\n            cityDistrictTown: \"\",\n            state: \"\",\n            landmark: \"\",\n            alternatePhoneNumber: \"\"\n        },\n        order: [],\n        selectedAddress: '',\n        existingAddress: false,\n        newAddress: false,\n        isAddressConfirm: false,\n        isOrderConfirm: false,\n        selectedPaymentType: 'cod',\n        paymentTypes: [\n            {id: 1, value: 'card', label: 'Credit Card / Debit Card / ATM Card', isActive: false},\n            {id: 2, value: 'netBanking', label: 'Net Banking', isActive: false},\n            {id: 3, value: 'paypal', label: 'Paypal', isActive: false},\n            {id: 4, value: 'cod', label: 'Cash après livraison', isActive: true},\n        ]\n    }\n\n    componentDidMount() {\n        if(!this.props.auth.isAuthenticated){\n            this.props.getToken()\n            .then(result => {\n                if(result){\n\n                    this.getAddresses();\n\n                }else{\n                    this.props.history.push('/login');\n                }\n            })\n            .catch(error => {\n                console.log(error);\n            })\n        }else{\n            this.getAddresses();\n        }\n    }\n\n    getAddresses = () => {\n        const userId = this.props.auth.user.userId;\n        fetch(`${base_url}/user/get-addresses/`+userId, {\n            headers: {\n                'auth-token': this.props.auth.token\n            }\n        })\n        .then(response => {\n            if(response.status == 200){\n                return response.json();\n            }else{\n                throw new Error('Something went wrong');\n            }\n        })\n        .then(jsonResponse => {\n            console.log(jsonResponse)\n            this.setState({\n                addresses: jsonResponse.message.address\n            })\n        })\n        .catch(error => {\n            console.log(error);\n        });\n    }\n\n    inputHandler = (e) => {\n        const address = this.state.address;\n        const updatedAddress = {\n            ...address,\n            [e.target.name] :  e.target.value\n        };\n        this.setState({\n            address: updatedAddress\n        })\n    }\n\n    addressSelector = (e) => {\n\n        this.setState({\n            selectedAddress: e.target.value,\n            existingAddress: true,\n            newAddress: false\n        });\n\n    }\n\n    newAddressSelection = (e) => {\n        this.setState({\n            selectedAddress: 'newAddressId',\n            existingAddress: false,\n            newAddress: true\n        });\n    }\n\n    addressSubmitHandler = (e) => {\n        e.preventDefault();\n        console.log(this.state.address)\n\n        const address = {\n            userId: this.props.auth.user.userId,\n            address: this.state.address\n        }\n\n       fetch(`${base_url}/user/new-address`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': this.props.auth.token\n            },\n            method: 'POST',\n            body: JSON.stringify(address)\n       })\n       .then(response => response.json())\n       .then(jsonResponse => {\n           console.log('new address');\n           console.log(jsonResponse);\n           console.log('new address');\n          \n           //this.getAddresses();\n           //console.log(jsonResponse.message);\n           const updatedAddressList = jsonResponse.message.address;\n           this.setState({\n                isAddressConfirm: true,\n                address: {\n                    ...this.state.address,\n                    ...address.address\n                },\n                addresses: updatedAddressList,\n                selectedAddress: updatedAddressList[updatedAddressList.length - 1]._id\n            });\n           \n       })\n       .catch(error => {\n           console.log(error);\n       })\n    }\n\n    confirmDeliveryAddress = () => {\n        this.setState({\n            isAddressConfirm: true\n        });\n\n    }\n\n    confirmOrder = () => {\n        this.setState({\n            isOrderConfirm: true\n        })\n    }\n\n    selectPaymentOption = (e) => {\n        this.setState({\n            selectedPaymentType: e.target.value\n        })\n    }\n\n    submitOrder = async () => {\n\n        if(!this.state.isOrderConfirm){\n            return;\n        }\n\n        if(this.state.selectedPaymentType !== 'cod'){\n            return;\n        }\n        \n        const order = this.props.cart.cartItem.map(item => {\n            return {\n                product: item.product,\n                price: item.price,\n                quantity: item.quantity\n            }\n        });\n\n        try{\n\n            const response = await fetch(`${base_url}/order/create`,{\n                headers: {\n                    'Content-Type': 'application/json',\n                    'auth-token': this.props.auth.token\n                },\n                body: JSON.stringify({\n                    user: this.props.auth.user.userId,\n                    address: this.state.selectedAddress,\n                    order: order,\n                    paymentType: 'COD',\n                    paymentStatus: 'pending'\n                }),\n                method: 'POST'\n            });\n\n            const jsonResponse = await response.json();\n            if(response.status === 201){\n                this.props.clearCart();\n                this.props.history.push({\n                    pathname: '/thank-you',\n                    search: '?orderid='+jsonResponse.message._id,\n                    state: jsonResponse.message\n                });\n            }\n\n        }catch(error){\n            console.log(error);\n        }\n        \n    }\n\n    render() {\n\n        let address;\n        if(this.state.isAddressConfirm && !this.state.newAddress){\n            address = this.state.addresses.find(address => address._id === this.state.selectedAddress);\n        }else{\n            address = this.state.address;\n        }\n\n        return (\n            <React.Fragment>\n                <Header />\n                <div className=\"Content\">\n                    <div className=\"PlaceOrderWrapper\">\n\n                        \n                        <div className=\"DeliveryAddress\">\n\n                            <div className=\"Card\">\n                                <p className=\"CardText\">Login {this.props.auth.isAuthenticated ? <i className=\"fas fa-check\"></i> : null}</p>\n                                <p className=\"CardText\">Email: {this.props.auth.user.email}</p>\n                            </div>\n\n                            {\n                                this.state.isAddressConfirm ? \n                                 <div className=\"Card\">\n                                     <p className=\"CardText\">Delivery Address {this.state.isAddressConfirm ? <i className=\"fas fa-check\"></i> : null}</p>\n                                     <p>\n                                        <span>{`${address.fullName} - ${address.mobileNumber} - `}</span>\n                                        <span>{ `${address.address}, ${address.cityDistrictTown}, ${address.state} - ${address.pinCode}`}</span>\n                                        </p>\n                                 </div> :\n                                 <React.Fragment>\n                                <div className=\"Card\">\n                                    <h4>Delivery Address</h4>\n                                    {\n                                        this.state.addresses.length && this.state.addresses.map(address => \n                                            <DeliveryAddress \n                                                key={address._id} \n                                                onAddressSelection={this.addressSelector} \n                                                value={this.state.selectedAddress}\n                                                address={address} />\n                                        )\n                                    }\n                                    {\n                                        this.state.existingAddress ?\n                                        <div className=\"DeliveryButtonContainer\" >\n                                            <button onClick={this.confirmDeliveryAddress} className=\"DeliveryAddressButton\">Deliver Here</button>\n                                        </div> : null\n                                    }\n                                    \n                                </div>\n                                <div className=\"Card\">\n                                    <div>\n                                        <RadioButton \n                                            name=\"address\"\n                                            label=\"Add new Address\"\n                                            value={this.state.selectedAddress}\n                                            onChange={this.newAddressSelection}\n                                        />\n                                    </div>\n                                    {\n                                        this.state.newAddress ? \n                                            <AddressForm\n                                                address={this.state.address}\n                                                inputHandler={this.inputHandler}\n                                                addressSubmitHandler={this.addressSubmitHandler}\n                                            /> : null\n                                    }\n                                    \n                                    \n                                </div>\n                                </React.Fragment>\n                            }\n                            \n                               \n\n                                {\n                                    this.state.isOrderConfirm ? \n                                    <div className=\"Card\">\n                                        <p className=\"CardText\">Order Summary <i className=\"fas fa-check\"></i> </p>\n                                    </div> : \n                                    this.state.isAddressConfirm ? \n                                    <div className=\"Card\">\n                                        <h4 className=\"CardText\">Order Summary </h4>\n                                        {\n                                            this.props.cart.cartItem.map(item => (\n                                                <div key={item.product} style={{display: 'flex', margin: '5px 0', alignItems: 'center'}}>\n                                                    <div style={{width: '60px', height: '60px', overflow: 'hidden', position: 'relative'}}>\n                                                        <img style={{maxWidth: '100%', maxHeight: '100%', position: 'absolute', left: '50%', transform: 'translateX(-50%)'}} src={item.imageUrl} alt=\"\" />\n                                                    </div>\n                                                    <div>\n                                                        <h5>{item.name}</h5>\n                                                        <h6>Quantity : {item.quantity}</h6>\n                                                        <h6>${item.total}</h6>\n                                                    </div>\n                                                </div>\n                                            ))\n                                        }\n                                        <button onClick={this.confirmOrder} className=\"ContinueButton\">Continue</button>\n                                    </div>\n                                 : null\n                                }\n                                \n                                {\n                                    this.state.isOrderConfirm ? \n                                    <div className=\"Card\">\n                                    <h4 className=\"CardText\">Payment Option</h4>\n                                    <ul>\n                                        {\n                                            this.state.paymentTypes.map(payment => \n                                            <li className=\"paymentType\" key={payment.id}>\n                                                <RadioButton\n                                                    key={payment.id} \n                                                    name=\"paymentType\"\n                                                    label={payment.label}\n                                                    value={payment.value}\n                                                    onChange={this.selectPaymentOption}\n                                                />\n                                            </li>)\n                                        }\n                                    </ul>\n                                    {\n                                        this.state.selectedPaymentType !== 'cod' ? \n                                        <p className=\"ErrorMessage\">Sorry, Only Cash on Delivery is available</p> : null\n                                    }\n                                    <button className=\"PaymentConfirm\" onClick={this.submitOrder}>Confirm Order</button>\n\n                                </div> : null\n                                }\n                              \n                                \n\n                            \n\n                            \n\n\n\n                            </div>\n\n                                <CartPrice />\n\n                            \n                    </div>\n\n                    \n                   \n                </div>\n                \n            </React.Fragment>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        auth: state.auth,\n        cart: state.cart\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getToken: () => dispatch(authActions.getToken()),\n        clearCart: () => dispatch(cartActions.clearCart())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlaceOrder);","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Orders\\index.js",["385","386","387","388","389","390","391"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './style.css';\nimport Header from '../../components/Header/Header';\nimport * as authActions from '../../store/actions/authActions';\nimport { connect } from 'react-redux';\nimport { base_url } from '../../constants';\n\nclass Orders extends Component{\n\n    state = {\n        ordersList: []\n    }\n\n    componentDidMount(){\n\n        if(!this.props.auth.isAuthenticated){\n            \n                this.props.getToken()\n                .then(result => {\n                    console.log(\"###############\"+result)\n                if(result){\n                    this.getOrders();\n                    console.log(\"standard user: \"+result)\n                }else{\n                    this.props.history.push('/login');\n                }\n            })\n            \n            \n        }else{\n            if(this.props.auth.user.firstName == \"admin\"){\n                this.adminGetAllOrders();\n            }else{\n                this.getOrders();\n            }\n        \n        }\n\n      \n    }\n\n    getOrders = () => {\n        console.log(this.props.auth.isAuthenticated)\n        const token =  this.props.auth.token;\n        console.log(\"my token ord: \"+ token)\n        const userId = this.props.auth.user.userId;\n        fetch(`${base_url}/order/getorders/${userId}`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': token\n            }\n        })\n        .then(response => response.json())\n        .then(jsonResponse => {\n            console.log(\"get orders: \"+jsonResponse.message);\n            console.log(\"responseorder: \"+JSON.stringify(jsonResponse.message));\n            this.setState({\n                ordersList: jsonResponse.message\n            });\n        })\n        .catch(error => {\n            console.log(error);\n        })\n    }\n\n    /****get all orders for administration back office */\n    adminGetAllOrders =  () => {\n        const token =  this.props.auth.token;\n\n        fetch(`${base_url}/order/getusers`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': token\n            }\n        })\n        .then(response => response.json())\n        .then(jsonResponse => {\n           \n                jsonResponse.message.map(user => {\n                \n                fetch(`${base_url}/order/getorders/${user._id}`, {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'auth-token': token\n                    }\n                })\n                .then(response => response.json())\n                .then(jsonResponse => {\n                    console.log(\"get all orders for admin: \"+jsonResponse.message);\n                    this.setState(\n                        prevState => ({ ordersList: prevState.ordersList.concat(jsonResponse.message) })\n                    );\n                })\n                .catch(error => {\n                    console.log(error);\n                }) \n            \n            })\n    \n        })\n        .catch(error => {\n            console.log(error);\n        })\n    }\n    \n\n    formatDate = (date) => {\n        let d = new Date(date);\n        return `${d.getDate()}/${d.getMonth() + 1}/${d.getFullYear()}`;\n    }\n\n    getOrderTotal = (id) => {\n        const singleOrder = this.state.ordersList.find(order => order._id === id);\n        let orderTotal = 0;\n        singleOrder.order.forEach(order => {\n            orderTotal = orderTotal + (order.price * order.quantity)\n        });\n\n        return orderTotal;\n    }\n\n    render() {\n\n        return (\n            <React.Fragment>\n                <Header />\n                <div className=\"Content\">\n                    <div className=\"Card\">\n                        <p className=\"CardText\">Mes Commandes</p>\n\n                        {\n                            this.state.ordersList.map(order => {\n                                return (\n                                    <div key={order._id} className=\"Order\">\n                                        <div className=\"OrderHeader\">\n                                            <a href=\"#\">{order._id}</a>\n                                        </div>\n                                        <div className=\"OrderDescription\">\n                                            <div className=\"od1\">\n                                                <p className=\"odtitle\">Adresse de livraison</p>\n                                                <p>{`${order.address.address} ${order.address.cityDistrictTown} ${order.address.state} - ${order.address.pinCode}`}</p>\n                                            </div>\n                                            <div className=\"od2\">\n                                                <p className=\"odtitle\">Type de paiement</p>\n                                                <a className=\"odp\" style={{color: \"white\"}}>{order.paymentType}</a>\n                                            </div>\n                                            <div className=\"od3\">\n                                                <p className=\"odtitle\" >Statut du paiment</p>\n                                                <a className=\"odp\" style={{color: \"white\"}}>{order.paymentStatus}</a>\n                                            </div>\n                                        \n                                        </div>\n                                        <div>\n                                            {order.order.map(item => (\n                                                <div key={item._id} style={{display: 'flex', alignItems: 'center', margin: '5px 0', borderBottom: '1px solid #cecece'}}>\n                                                    <div style={{width: '80px', height: '80px', overflow: 'hidden', position: 'relative'}} className=\"ImageContainer\">\n                                                        <img style={{maxWidth: '100%', maxHeight: '100%', position: 'absolute', left: '50%', transform: 'translateX(-50%)'}} src={item.product.imageUrl}/>\n                                                    </div>\n                                                    <div>\n                                                        <p className=\"odtitle\">{item.product.name}</p>\n                                                        <div style={{fontSize: '14px', color: '#555', fontWeight: 'bold'}}>\n                                                        <p>Quantité: {item.quantity}</p>\n                                                        <p>{item.price * item.quantity}€</p>\n                                                        </div>\n                                                       \n                                                    </div>\n                                                </div>\n                                            ))}\n                                        </div>\n                                        <div className=\"OrderFooter\">\n                                            <p>Commande passée le <span>{this.formatDate(order.orderDate)}</span></p>\n                                            <p>Total de la commande <span>{this.getOrderTotal(order._id)}€</span></p>\n                                        </div>\n                                    </div>\n                                )\n                            })\n                        }\n\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        auth: state.auth\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        getToken: () => dispatch(authActions.getToken())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\store\\actions\\cartActions.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\Header\\Header.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\constants\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\UI\\MobileTypeInput\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\UI\\RadioButton\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\Header\\TopHeader\\TopHeader.js",["392"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as authActions from '../../../store/actions/authActions';\nimport './style.css';\n\nimport { connect } from 'react-redux';\n\nclass TopHeader extends Component{\n\n    componentDidMount() {\n        this.props.getToken();\n    }\n\n\n    render() {\n        let guestAccount = <ul className=\"Dropdown Account\">\n                                <li><Link to=\"/signup\"><i className=\"fas fa-user\"></i>&nbsp;&nbsp;<span>S'inscrire</span></Link></li>\n                                <li><Link to=\"/login\"><i className=\"fas fa-user\"></i>&nbsp;&nbsp;<span>Se connecter</span></Link></li>\n                            </ul>;  \n       \n        if(this.props.auth.isAuthenticated){\n\n           if(this.props.auth.user.firstName==\"admin\"){\n               guestAccount = <ul className=\"Dropdown Account\">\n               <li><Link to=\"/orders\"><i className=\"far fa-clipboard\"></i>&nbsp;&nbsp;<span>Commandes</span></Link></li>\n               <li><Link to=\"/manageusers\"><i className=\"fas fa-users\"></i>&nbsp;&nbsp;<span>Utilisateurs</span></Link></li>\n               <li><Link to=\"/manageproducts\"><i className=\"fas fa-book\"></i>&nbsp;&nbsp;<span>Produits</span></Link></li>\n               <li><Link to=\"\" onClick={() => this.props.logout()}><i className=\"fas fa-sign-out-alt\"></i>&nbsp;&nbsp;<span>Se déconnecter</span></Link></li>\n           </ul>;\n           }else{\n                guestAccount = <ul className=\"Dropdown Account\">\n                <li><Link to=\"/orders\"><i className=\"far fa-clipboard\"></i>&nbsp;&nbsp;<span>Commandes</span></Link></li>\n                <li><Link to=\"\" onClick={() => this.props.logout()}><i className=\"fas fa-sign-out-alt\"></i>&nbsp;&nbsp;<span>Se déconnecter</span></Link></li>\n            </ul>; \n           }\n               \n            \n\n          \n                \n            \n        }\n\n        return (\n            <div className=\"TopHeader\">\n                <div className=\"SocialMediaIcons\">\n                <ul className=\"TopMenu\">\n                    <i className=\"fab fa-facebook-f\"></i>\n                    <i className=\"fab fa-google-plus-g\"></i>\n                    <i className=\"fab fa-instagram\"></i>\n                    <i className=\"fab fa-youtube\"></i>\n                </ul>\n                </div>\n                <div>\n                    <ul className=\"TopMenu\">\n                        <li className=\"MenuItem\">\n                            <i className=\"fas fa-user-circle\" ></i>&nbsp;&nbsp;\n                            <Link to=\"/account\">{this.props.auth.isAuthenticated ? this.props.auth.user.firstName: 'Mon compte'}</Link>\n        \n                            {guestAccount}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        auth: state.auth\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getToken: () => dispatch(authActions.getToken())\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopHeader);","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\ShopStore\\Products\\Product\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\App.js",["393"],"import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport PrivateRoute from '../PrivateRoute';\nimport Shop from './Shop';\nimport Login from './Login';\nimport Signup from './Signup';\nimport ForgetPassword from './ForgetPassword';\nimport ControlPanel from './ControlPanel';\n\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport authReducers from '../store/reducers/authReducers'; \nimport productReducers from '../store/reducers/productReducers';\nimport ProductDetails from './ProductDetails';\nimport Home from './Home';\nimport Cart from './Cart';\nimport cartReducers from '../store/reducers/cartReducers';\nimport PlaceOrder from './PlaceOrder';\nimport ThankYou from './ThankYou';\nimport Orders from './Orders';\n\n//Product reducer for admin\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productSaveReducer,\n  productDeleteReducer,\n  productReviewSaveReducer,\n  categoryListReducer\n} from './Products/ProdReducer';\n\nconst rootReducers = combineReducers({\n  auth: authReducers,\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productSave: productSaveReducer,\n  productDelete: productDeleteReducer,\n  categoryList: categoryListReducer,\n  productReviewSave: productReviewSaveReducer,\n  products: productReducers,\n  cart: cartReducers\n});\n\nconst store = createStore(rootReducers, applyMiddleware(thunk));\n\nwindow.store = store;\n\nfunction App() {\n  return (\n\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n            <Switch>\n              \n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/signup\" component={Signup} />\n              <Route path=\"/forget-password\" component={ForgetPassword} />\n              <Route path=\"/cpanel\" component={ControlPanel} />\n              <Route path=\"/products/:category/:slug\" component={ProductDetails} />\n              <Route path=\"/products\"  component={Shop} />\n              <PrivateRoute path=\"/cart\" component={Cart} />\n              <PrivateRoute path=\"/place-order\" component={PlaceOrder} />\n              <PrivateRoute path=\"/thank-you\" component={ThankYou} />\n              <PrivateRoute path=\"/orders\" component={Orders} />\n              <Route path=\"/\"  component={Shop} />         \n                         \n            </Switch>\n                     \n        </div>\n      </Router>\n    </Provider>\n      \n    \n    \n  );\n}\n\nexport default App;\n","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\ThankYou\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Shop\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\store\\actions\\productActions.js",["394","395","396"],"import { base_url } from \"../../constants\";\n\nexport const GET_PRODUCTS = 'GET_PRODUCTS';\nexport const GET_PRODUCT_CATEGORIES = 'GET_PRODUCT_CATEGORIES';\n\nexport const getProducts = (categorySlug = '', filter) => {\n    return async dispatch => {\n\n        try{\n\n            categorySlug = (categorySlug == 'all') ? '' : categorySlug;\n\n            let query = '';\n            if(filter){\n                query = '?filter=1&'\n                for(let prop in filter){\n                    query += `${prop}=${filter[prop]}&`\n                }\n                query = query.substring(0, query.length-1);\n            }\n\n            const response = await fetch(`${base_url}/products/${categorySlug}${query}`);\n            const jsonResponse = await response.json();\n            if(response.status == 200){\n                dispatch({\n                    type: GET_PRODUCTS,\n                    products: jsonResponse.message\n                });\n            }\n\n            return jsonResponse;\n\n        }catch(error){\n            console.log(error);\n        }\n\n    }\n}\n\nexport const getCategories = () => {\n    return dispatch => {\n        fetch(`${base_url}/category`, {\n            headers: {\n                'Content-Type' : 'application/json'\n            }\n        })\n        .then(response => response.json())\n        .then(jsonResponse => {\n            dispatch({\n                type: GET_PRODUCT_CATEGORIES,\n                categories: jsonResponse.message\n            });\n        })\n        .catch(error => {\n            console.log(error);\n        });\n    }\n}\n\nexport const getSingleProduct = (productSlug) => {\n    return async dispatch => {\n        try{\n\n            const response = await fetch(`${base_url}/products/category/${productSlug}`);\n            const jsonResponse = await response.json();\n            if(response.status === 200){\n\n               \n\n            }\n\n\n        }catch(error){\n            console.log(error);\n        }\n    }\n}\n\n","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\PlaceOrder\\AddressForm\\index.js",["397"],"import React, { Component } from 'react';\nimport NormalInput from '../../../components/UI/NormalInput';\n\n\nconst AddressForm = props =>  {\n\n        const {address} = props;\n     \n\n        return (\n            <form onSubmit={props.addressSubmitHandler}>\n                 <div className=\"Row\">\n                        <div style={{width: '49%'}}>\n                            <NormalInput \n                                name=\"fullName\"\n                                value={address.fullName}\n                                placeholder={'Full Name'}\n                                inputHandler={props.inputHandler}\n                                type=\"text\"\n                            />\n                        </div>\n                        <div style={{width: '49%'}}>\n                            <NormalInput \n                                name=\"mobileNumber\"\n                                value={address.mobileNumber}\n                                placeholder={'10-digit Mobile Number'}\n                                inputHandler={props.inputHandler}\n                                type=\"text\"\n                            />\n                        </div>\n                    </div>\n                    <div className=\"Row\">\n                        <div style={{width: '49%'}}>\n                            <NormalInput \n                                name=\"pinCode\"\n                                value={address.pinCode}\n                                placeholder={'Pincode'}\n                                inputHandler={props.inputHandler}\n                                type=\"text\"\n                            />\n                        </div>\n                        <div style={{width: '49%'}}>\n                            <NormalInput \n                                name=\"locality\"\n                                value={address.locality}\n                                placeholder={'Locality'}\n                                inputHandler={props.inputHandler}\n                                type=\"text\"\n                            />\n                        </div>\n                    </div>\n    \n                    <div className=\"Row\">\n                        <NormalInput \n                                name=\"address\"\n                                value={address.address}\n                                placeholder={'Address (Area and Street)'}\n                                inputHandler={props.inputHandler}\n                                type=\"textarea\"\n                                style={{height: '60px'}}\n                        />\n                    </div>\n    \n                    <div className=\"Row\">\n                        <div style={{width: '49%'}}>\n                            <NormalInput \n                                name=\"cityDistrictTown\"\n                                value={address.cityDistrictTown}\n                                placeholder={'City/District/Town'}\n                                inputHandler={props.inputHandler}\n                                type=\"text\"\n                            />\n                        </div>\n                        <div style={{width: '49%'}}>\n                            <NormalInput \n                                name=\"state\"\n                                value={address.state}\n                                placeholder={'State'}\n                                inputHandler={props.inputHandler}\n                                type=\"text\"\n                            />\n                        </div>\n                    </div>\n    \n                    <div className=\"Row\">\n                        <div style={{width: '49%'}}>\n                            <NormalInput \n                                name=\"landmark\"\n                                value={address.landmark}\n                                placeholder={'Landmark (Optional)'}\n                                inputHandler={props.inputHandler}\n                                type=\"text\"\n                            />\n                        </div>\n                        <div style={{width: '49%'}}>\n                            <NormalInput \n                                name=\"alternatePhoneNumber\"\n                                value={address.alternateNumber}\n                                placeholder={'Alternate Phone (Optional)'}\n                                inputHandler={props.inputHandler}\n                                type=\"text\"\n\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"Row\">\n                        <button className=\"DeliveryAddressButton\">SAVE AND DELIVER HERE</button>\n                    </div>\n\n            </form>\n           \n        );\n    \n    \n}\n\nexport default AddressForm;","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\UI\\SubmitGradientButton\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\Header\\BottomHeader\\BottomHeader.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Cart\\index.js",["398"],"import React, { Component } from 'react';\nimport Header from '../../components/Header/Header';\nimport './style.css';\nimport CartItem from './CartItem';\nimport * as cartActions from '../../store/actions/cartActions';\nimport * as authActions from '../../store/actions/authActions';\nimport { connect } from 'react-redux';\nimport CartPrice from '../../components/CartPrice';\n\nclass Cart extends Component{\n\n    state = {\n        cartItems: []\n    }\n\n    decreaseQuantity = (e, productId) => {\n        this.updateCart(productId, -1);\n    }\n\n    increaseQuantity = (e, productId) => {\n        this.updateCart(productId, 1);\n    }\n\n    updateCart = async (productId, quantity) => {\n        try{\n            const auth = this.props.auth;\n            let product = this.state.cartItems.find(item => item.product === productId);\n            product = {\n                productId: product.product,\n                quantity: parseInt(product.quantity) + parseInt(quantity),\n                newQuantity: quantity,\n                price: product.price,\n                total: parseFloat(product.total) + parseFloat( product.price * quantity )\n            }\n            if(product.quantity <= 0){\n                return;\n            }\n            const response = await this.props.updateCart(auth.token, auth.user.userId, product);\n            if(response.ok == 1){\n                const {cartItems} = this.state;\n                this.setState({\n                    cartItems: cartItems.map(item => item.product === productId ? \n                        {...item, quantity: item.quantity + quantity, total: item.total + (item.price * quantity)}: item)\n                })\n            }\n        }catch(error){\n            console.log(error);\n        }\n        \n    }\n\n    changeQuantity = (e, productId) => {\n\n        // console.log(e.target.value);\n\n        // if(isNaN(e.target.value)){\n        //     return;\n        // }\n\n        // const firstDigit = parseInt(e.target.value.split(\"\")[0]);\n        // if(firstDigit === 0){\n        //     return;\n        // }\n\n        // //alert(e.target.value);\n\n        // this.updateCart(productId, parseInt(e.target.value));\n    }\n\n    componentDidMount() {\n        if(!this.props.auth.isAuthenticated){\n            this.props.getToken()\n            .then(result => {\n                if(result){\n                    const cartItems = this.props.getCartItems(this.props.auth.token, this.props.auth.user.userId);\n                    return cartItems;\n                }\n                return [];\n            })\n            .then(cartItems => {\n                if(cartItems.cart.length > 0){\n\n                    console.log(this.props.cart)\n\n                    this.setState({\n                        cartItems: this.props.cart.cartItem\n                    })\n                }\n            })\n            .catch(error => {\n                console.log(error);\n            })\n        }else{\n            this.setState({\n                cartItems: this.props.cart.cartItem\n            })\n        }\n    }\n\n    render (){\n\n        return (\n            <React.Fragment>\n                <Header />\n                <div className=\"Content\">\n                    <div className=\"CartWrapper\">\n                        <div className=\"CartDetails\">\n                            {/* List cart items */}\n                            <div className=\"CardTitle\">\n                                <h3>Mon panier</h3>\n                            </div>\n                            <div className=\"CardBody\">\n\n                                {\n                                    this.state.cartItems.map(product => \n                                        <CartItem\n                                            key={product.product}\n                                            productId={product.product}\n                                            name={product.name}\n                                            imageUrl={product.imageUrl}\n                                            price={product.price}\n                                            quantity={product.quantity}\n                                            total={product.total}\n                                            //name=\"quantity\" \n                                            changeQuantity={this.changeQuantity}\n                                            increaseQuantity={this.increaseQuantity}\n                                            decreaseQuantity={this.decreaseQuantity}\n                                    />)\n                                }\n                                \n\n                                <div className=\"PlaceOrder\">\n                                    <button className=\"PlaceOrderButton\" onClick={() => this.props.history.push('/place-order')}>Passer la commande</button>\n                                </div>\n\n                            </div>\n                        </div>\n                        \n                        <CartPrice />\n\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        auth: state.auth,\n        cart: state.cart\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getCartItems: (token, userId) => dispatch(cartActions.getCartItems(token, userId)),\n        updateCart: (token, userId, product) => dispatch(cartActions.updateCart(token, userId, product)),\n        getToken: () => dispatch(authActions.getToken())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\store\\actions\\authActions.js",["399","400"],"import { base_url } from \"../../constants\";\n\nexport const AUTHENTICATE_USER = 'AUTHENTICATE_USER';\nexport const LOGOUT_USER = 'LOGOUT_USER';\n\nexport const signup = (user) => {\n    return async dispatch => {\n        try{\n           const response = await fetch(`${base_url}/user/signup`, {\n               headers: {\n                   'Content-Type': 'application/json',\n                   'Accepts': 'application/json'\n               },\n               method: 'POST',\n               body: JSON.stringify({\n                   firstName: user.firstName,\n                   lastName: user.lastName,\n                   email: user.email,\n                   password: user.password\n               })\n           });\n           const jsonResponse = await response.json();\n           return jsonResponse;\n        }catch(error){\n            console.log(error);\n        }\n    }\n}\n\nexport const authenticate = (email, password) => {\n    return async dispatch => {\n\n        var response = \"\"\n\n        console.log(email)\n        if(email==\"axdev2020@gmail.com\"){\n            console.log('aa'+email)\n             response = await fetch(`${base_url}/admin/login`, {\n                headers: {\n                    'Content-Type' : 'application/json',\n                    'Accepts': 'application/json'\n                },\n                method: 'POST',\n                body: JSON.stringify({\n                    email: email,\n                    password: password\n                })\n            }); \n        }else{\n             response = await fetch(`${base_url}/user/login`, {\n                headers: {\n                    'Content-Type' : 'application/json',\n                    'Accepts': 'application/json'\n                },\n                method: 'POST',\n                body: JSON.stringify({\n                    email: email,\n                    password: password\n                })\n            });\n        }\n       \n        const jsonResponse = await response.json();\n        if(response.status === 200){\n\n            window.localStorage.setItem('auth', JSON.stringify(response.message));\n\n            dispatch({\n                type: AUTHENTICATE_USER,\n                auth: jsonResponse.message\n            });\n        }\n\n        return jsonResponse.message;\n    }\n}\n\nexport const logout = () => {\n    return dispatch => {\n        const authData = window.localStorage.getItem('auth');\n        if(authData){\n            window.localStorage.clear();\n            dispatch({\n                type: LOGOUT_USER,\n                payload: ''\n            });\n            return Promise.resolve(true);\n        }\n        return Promise.resolve(false);\n    }\n}\n\nexport const getToken = () => {\n    return dispatch => {\n        const authData = window.localStorage.getItem('auth');\n\n        if(authData){\n            const auth = JSON.parse(authData);\n            if(auth.hasOwnProperty('token') && auth.token != ''){\n                dispatch({\n                    type: AUTHENTICATE_USER,\n                    auth: auth\n                });\n\n                return Promise.resolve(true);\n\n            }\n        }\n        \n        return Promise.resolve(false);\n        \n    }\n}\n\n","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\Logo\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\ShopStore\\ShopStore.js",["401"],"import React, { Component } from 'react';\nimport './style.css';\nimport Products from './Products/Products';\nimport { Route, Switch } from 'react-router-dom';\nimport Header from '../Header/Header';\nimport * as authAtions from '../../store/actions/authActions';\n\nimport ProductsScreen from '../../containers/Products/ProductsScreen'\nimport { connect } from \"react-redux\";\n\n\nclass ShopStore extends Component{\n\n    state={\n        categoryTitle: 'Products'\n    }\n\n    render() {\n\n        console.log('Parents');\n        console.log(this.props);\n\n        return (\n            <React.Fragment>\n                <Header/>\n                <Switch>\n                    <Route path=\"/\" exact component={Products} />\n                    <Route path=\"/products\" exact component={Products} />\n                    <Route path=\"/products/:slug\" component={Products} />\n                    <Route path=\"/manageproducts\" exact component={ProductsScreen} />\n                </Switch>\n            </React.Fragment>\n            \n        );\n    }\n}\n\n\n\nexport default connect(null, null)(ShopStore);","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\PlaceOrder\\DeliveryAddress\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Cart\\CartItem\\index.js",["402"],"import React from 'react';\nimport QuantityControl from '../../../components/QuantityControl';\n\nimport './style.css';\n\nconst CartItem = props => {\n    return (\n        <div className=\"SingleItem\">\n            <div className=\"ItemWrapper\">\n                <div className=\"ItemImage\" style={{width: '80px', height: '80px', overflow: 'hidden', position: 'relative'}}>\n                    <img style={{maxWidth: '100%', maxHeight: '100%', position: 'absolute', left: '50%', transform: 'translateX(-50%)'}} src={props.imageUrl} alt=\"\" />\n                </div>\n                <div className=\"ItemDetails\">\n                    <p className=\"ItemName\">{props.name}</p>\n                    <p className=\"ItemPrice\">{props.total}€</p>\n                </div>\n            </div>\n            <div className=\"CartActionButtons\">\n                <QuantityControl\n                    productId={props.productId}\n                    name={props.name} \n                    quantity={props.quantity}\n                    changeQuantity={props.changeQuantity}\n                    increaseQuantity={props.increaseQuantity}\n                    decreaseQuantity={props.decreaseQuantity}\n                />\n                <a href=\"#\">Supprimer</a>\n            </div>\n        </div>\n    )\n}\n\nexport default CartItem;","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\Header\\MainHeader\\MainHeader.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Signup\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\Error\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\QuantityControl\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Products\\ProductsScreen.js",["403","404","405","406","407","408","409","410","411","412","413","414","415","416","417"],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Products\\ProductsActions.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Products\\ProductsConstants.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Products\\ProdReducer.js",[],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\serviceWorker.js",[],["418","419"],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\containers\\Login\\index.js",["420","421"],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\containers\\Cart\\index.js",["422","423","424","425","426","427","428","429","430"],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\containers\\Signup\\index.js",["431","432"],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\store\\actions\\productActions.js",["433","434","435","436","437"],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\constants\\index.js",[],["438","439"],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\containers\\PlaceOrder\\DeliveryAddress\\index.js",[],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\components\\UI\\SubmitGradientButton\\index.js",[],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\components\\UI\\RadioButton\\index.js",[],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\components\\Header\\BottomHeader\\BottomHeader.js",["440","441","442"],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\components\\Logo\\index.js",[],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\containers\\App.js",["443","444","445","446","447","448","449","450"],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\components\\Header\\TopHeader\\TopHeader.js",["451","452","453"],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\components\\Header\\MainHeader\\MainHeader.js",["454","455","456"],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\components\\CartPrice\\index.js",[],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\containers\\ProductDetails\\index.js",["457","458","459","460","461","462","463","464","465","466"],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\store\\reducers\\productReducers.js",[],["467","468"],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\store\\actions\\cartActions.js",["469","470","471"],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\store\\reducers\\cartReducers.js",["472"],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\containers\\Products\\ProductsScreen.js",["473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport axios from 'axios';\r\nimport {\r\n  saveProduct,\r\n  listProducts,\r\n  deleteProduct,\r\n  listCategories\r\n} from '../../store/actions/productActions'\r\n\r\nimport './style.css';\r\n\r\n\r\nconst ProductsScreen = (props) => {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [id, setId] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [imageUrl, setImageUrl] = useState(null);\r\n  const [category, setCategory] = useState('');\r\n  const [stock, setStock] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [slug, setSlug] = useState('');\r\n  const [create, setCreate] = useState(true);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [deleteItem, setDeleteItem] = useState(false);\r\n  const [delProduct,  setDelProduct] = useState(null)\r\n\r\n  const userSignin = useSelector(state => state.userSignin);\r\n  const {userInfo, error } = userSignin\r\n  \r\n  const productList = useSelector((state) => state.productList)\r\n  const {loading, products} = productList\r\n\r\n  const categoryList = useSelector((state) => state.categoryList)\r\n  const {categories} = categoryList\r\n\r\n  const productSave = useSelector((state) => state.productSave)\r\n  const {\r\n    loading: loadingSave,\r\n    success: successSave,\r\n    error: errorSave,\r\n  } = productSave;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete)\r\n  const {\r\n    loading: loadingDelete,\r\n    success: successDelete,\r\n    error: errorDelete,\r\n  } = productDelete;\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (successSave) {\r\n      setModalVisible(false);\r\n    }\r\n    dispatch(listCategories())\r\n    dispatch(listProducts(userInfo.token))\r\n\r\n  }, [successSave, successDelete])\r\n\r\n  const openModal = (product) => {\r\n    setModalVisible(true);\r\n    setId(product._id);\r\n    setName(product.name);\r\n    setPrice(product.price);\r\n    setDescription(product.description);\r\n    setSlug(product.slug)\r\n    setImageUrl(product.imageUrl);\r\n    setCategory(product.category);\r\n    setStock(product.stock);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      saveProduct({\r\n        _id: id,\r\n        name,\r\n        price,\r\n        imageUrl,\r\n        category,\r\n        stock,\r\n        description,\r\n        slug,\r\n        create\r\n      }, userInfo.token)\r\n    )\r\n    console.log(\"category: \"+category)\r\n  }\r\n\r\n  //Dialog box for delete confirmation\r\n  const Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  })\r\n\r\n  const deleteHandler = () => {\r\n\r\n    if(openDialog){\r\n\r\n    categories.map((cat) => {\r\n      //setCategory(cat._id) pb avec select faut choisir dans tout les cas\r\n      if (cat.name == delProduct.category){\r\n        delProduct[\"category\"] = cat._id \r\n      }\r\n    })\r\n\r\n    dispatch(deleteProduct(delProduct, userInfo.token))\r\n    setDelProduct(null)\r\n  }\r\n  }\r\n\r\n\r\n  var listOfProducts = []\r\n  products.map((produit) => {\r\n\r\n      categories.map((cat) => {\r\n        if (cat._id == produit.category){\r\n          produit[\"category\"] = cat.name\r\n          listOfProducts.push(produit)\r\n        }\r\n      })\r\n    })\r\n\r\n  \r\n  return (\r\n    <div className=\"Content\">\r\n    <div className=\"Card\">\r\n      <div className=\"product-header\">\r\n        <h3>Liste des produits</h3>\r\n        <button className=\"btn btn-success\" onClick={() => {\r\n            setCreate(true)\r\n            openModal({})\r\n        } }\r\n        >\r\n         Nouveau Produit\r\n        </button>\r\n      </div>\r\n    {modalVisible && (\r\n        <div className=\"form\">\r\n          <form  onSubmit={submitHandler}>\r\n            <ul className=\"form-container\">\r\n              <li>\r\n                <h2>Créer un produit</h2>\r\n              </li>\r\n              <li>\r\n                {/* loadingSave && <div>Loading...</div> */}\r\n                {/* errorSave && <div>{errorSave}</div> */}\r\n              </li>\r\n\r\n              <li>\r\n                <label htmlFor=\"name\">Nom</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  id=\"name\"\r\n                  onChange={(e) => setName(e.target.value)}\r\n                ></input>\r\n              </li>\r\n              <li>\r\n                <label htmlFor=\"price\">Prix</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"price\"\r\n                  value={price}\r\n                  id=\"price\"\r\n                  onChange={(e) => setPrice(e.target.value)}\r\n                ></input>\r\n              </li>\r\n              <li>\r\n                <label htmlFor=\"imageUrl\">Image</label>\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"imageUrl\"\r\n                  id=\"imageUrl\"\r\n                  onChange={(e) => setImageUrl(e.target.files[0])}\r\n                ></input>\r\n              </li>\r\n              <li>\r\n                <label htmlFor=\"category\">Catégorie</label>\r\n                <select name=\"categories\" value={category} onChange={(e) => setCategory(e.target.value)}>\r\n                    {categories.map((cat) => {\r\n                        return <option key={cat._id} value={cat._id}>{cat.name}</option>\r\n                    })}\r\n                </select>\r\n               {/**<input\r\n                  type=\"text\"\r\n                  name=\"category\"\r\n                  value={category}\r\n                  id=\"category\"\r\n                  onChange={(e) => setCategory(e.target.value)}\r\n                ></input> */} \r\n              </li>\r\n              <li>\r\n                <label htmlFor=\"stock\">Quantité</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"stock\"\r\n                  value={stock}\r\n                  id=\"stock\"\r\n                  onChange={(e) => setStock(e.target.value)}\r\n                ></input>\r\n              </li>\r\n              <li>\r\n                <label htmlFor=\"description\">Description</label>\r\n                <textarea\r\n                  name=\"description\"\r\n                  value={description}\r\n                  id=\"description\"\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                ></textarea>\r\n              </li>\r\n              <li>\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  {create ? 'Enregistrer' : 'Mettre à jour'}\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault()\r\n                    setModalVisible(false)\r\n                    dispatch(listCategories())\r\n                    dispatch(listProducts())\r\n                  }}\r\n                  className=\"btn btn-info\"\r\n                >\r\n                  Annuler\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </form>\r\n        </div>\r\n      )} \r\n\r\n      <div className=\"product-list\">\r\n        <table className=\"table\">\r\n          <thead className=\"thead\">\r\n            <tr>\r\n              <th>Titre</th>\r\n              <th>Item</th>\r\n              <th>Description</th>\r\n              <th>Prix</th> \r\n              <th>Quantité</th> \r\n              <th>Catégorie</th>\r\n              <th>Date</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {listOfProducts.map((product) => (\r\n              <tr key={product._id}>\r\n                <td>{product.name}</td>\r\n                <td><img src={product.imageUrl} alt=\"\" height=\"50\" width=\"40\"/> </td>\r\n                <td>{product.description.length > 20 ? product.description.substring(0, 20) + \"...\" : product.description}</td>\r\n                <td>{product.price}€ </td>\r\n                <td>{product.stock} </td>\r\n                <td>{product.category}</td>\r\n                <td>{product.createdAt.split(\"T\")[0]}</td>\r\n                <td>\r\n                  <button className=\"btn btn-sm round btn-outline-success\" \r\n                  onClick={() => {\r\n                    setCreate(false)\r\n                    openModal(product)\r\n                  }}\r\n                  >\r\n                    Editer\r\n                  </button>{' '}\r\n                  <button\r\n                    className=\" btn btn-sm btn-outline-danger\"\r\n                    onClick={() => { \r\n                      setDelProduct(product)\r\n                      setOpenDialog(true)\r\n                    }}\r\n                  >\r\n                    Supprimer\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  \r\n    { openDialog && (    \r\n    <div>\r\n      <Dialog\r\n        open={openDialog}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={(e) => {\r\n          e.preventDefault()\r\n         setOpenDialog(false)}}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">{\"Suppression d'un produit\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Cette action est irreversible. Êtes-vous sur de vouloir de supprimer ce produit ?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={\r\n            (e) => { \r\n              e.preventDefault()\r\n              setOpenDialog(false)\r\n              setDeleteItem(false)\r\n              setDelProduct(null)\r\n              dispatch(listCategories())\r\n              dispatch(listProducts(userInfo.token))\r\n              }} color=\"primary\">\r\n            Non\r\n          </Button>\r\n          <Button onClick={\r\n            (e) => {\r\n              e.preventDefault()\r\n              setOpenDialog(false)\r\n              setDeleteItem(true)\r\n              deleteHandler(e)\r\n              dispatch(listCategories())\r\n              dispatch(listProducts(userInfo.token))\r\n              }} color=\"primary\">\r\n            Oui\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n            </div>) }\r\n    </div>)\r\n            }\r\n\r\n\r\nexport default ProductsScreen\r\n","C:\\projects\\NodeJS\\mdp\\frontend\\src\\containers\\Cart\\CartItem\\index.js",["489"],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\containers\\PlaceOrder\\index.js",["490","491","492","493","494","495","496","497","498","499","500","501"],"import Header from '../../components/Header/Header';\nimport './style.css';\nimport NormalInput from '../../components/UI/NormalInput'\nimport AddressForm from './AddressForm';\nimport CartPrice from '../../components/CartPrice';\nimport DeliveryAddress from './DeliveryAddress';\nimport RadioButton from '../../components/UI/RadioButton';\nimport { base_url } from '../../constants/index';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst PlaceOrder = (props) => {\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { loading, userInfo, error } = userSignin;\n    const [addresses, setAddresses] = useState([])\n    const [address, setAddress] = useState({fullName: \"\",\n                            mobileNumber: \"\",\n                            pinCode: \"\",\n                            locality: \"\",\n                            address: \"\",\n                            cityDistrictTown: \"\",\n                            state: \"\",\n                            landmark: \"\",\n                            alternatePhoneNumber: \"\"})\n    const [order, setOrder] = useState([])\n    const [selectedAddress, setSelectedAddress] = useState('')\n    const [existingAddress, setExistingAddress] = useState(false)\n    const [newAddress, setNewAddress] = useState(false)\n    const [isAddressConfirm, setIsAddressConfirm] = useState(false)\n    const [isOrderConfirm, setIsOrderConfirm] = useState(false)\n    const [selectedPaymentType, setSelectedPaymentType] = useState('COD')\n    const [paymentTypes, setPaymentTypes] = useState([\n        {id: 1, value: 'card', label: 'Credit Card / Debit Card / ATM Card', isActive: false},\n        {id: 2, value: 'netBanking', label: 'Net Banking', isActive: false},\n        {id: 3, value: 'paypal', label: 'Paypal', isActive: false},\n        {id: 4, value: 'cod', label: 'Cash après livraison', isActive: true},\n    ])\n\n\n\n    const getAddresses = () => {\n        fetch(`${base_url}/user/get-addresses/`+userInfo._id, {\n            headers: {\n                'auth-token': userInfo.token\n            }\n        })\n        .then(response => {\n            if(response.status == 200){\n                return response.json();\n            }else{\n                throw new Error('Something went wrong');\n            }\n        })\n        .then(jsonResponse => {\n            console.log(jsonResponse)\n            setAddresses(jsonResponse.message.address)\n        })\n        .catch(error => {\n            console.log(error);\n        });\n    }\n\n    const inputHandler = (e) => {\n        const updatedAddress = {\n            ...address,\n            [e.target.name] :  e.target.value\n        }\n\n        setAddress(updatedAddress)\n    }\n\n    const  addressSelector = (e) => {\n        setSelectedAddress(e.target.value)\n        setExistingAddress(true)\n        setNewAddress(false)\n    }\n\n    const newAddressSelection = (e) => {\n        setSelectedAddress('newAddressId')\n        setExistingAddress(false)\n        setNewAddress(true)\n    }\n\n    const addressSubmitHandler = (e) => {\n        e.preventDefault()\n        console.log(address)\n\n        const address = {\n            userId: userInfo._id,\n            address: address\n        }\n\n       fetch(`${base_url}/user/new-address`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': userInfo.token\n            },\n            method: 'POST',\n            body: JSON.stringify(address)\n       })\n       .then(response => response.json())\n       .then(jsonResponse => {\n           console.log('new address');\n           console.log(jsonResponse);\n           console.log('new address');\n          \n           const updatedAddressList = jsonResponse.message.address\n\n            setIsAddressConfirm(true)\n            setAddress({\n                ...this.state.address,\n                ...address.address\n            })\n            setAddresses(updatedAddressList)\n            setSelectedAddress(updatedAddressList[updatedAddressList.length - 1]._id)\n           \n       })\n       .catch(error => {\n           console.log(error);\n       })\n    }\n\n    const confirmDeliveryAddress = () => {\n        setIsAddressConfirm(true)\n    }\n\n    const  confirmOrder = () => {\n        setIsOrderConfirm(true)\n    }\n\n    const selectPaymentOption = (e) => {\n        setSelectedPaymentType(e.target.value)\n    }\n\n    const submitOrder = async () => {\n\n        if(!isOrderConfirm){\n            return\n        }\n\n        if(selectedPaymentType !== 'COD'){\n            return;\n        }\n        \n        const order = props.cart.cartItem.map(item => {\n            return {\n                product: item.product,\n                price: item.price,\n                quantity: item.quantity\n            }\n        });\n\n        try{\n\n            const response = await fetch(`${base_url}/order/create`,{\n                headers: {\n                    'Content-Type': 'application/json',\n                    'auth-token': userInfo.token\n                },\n                body: JSON.stringify({\n                    user: userInfo._id,\n                    address: selectedAddress,\n                    order: order,\n                    paymentType: 'COD',\n                    paymentStatus: 'pending'\n                }),\n                method: 'POST'\n            });\n\n            const jsonResponse = await response.json();\n            if(response.status === 201){\n                 props.clearCart()\n                 props.history.push({\n                    pathname: '/thank-you',\n                    search: '?orderid='+jsonResponse.message._id,\n                    state: jsonResponse.message\n                });\n            }\n\n        }catch(error){\n            console.log(error);\n        }\n        \n    }\n\n        let getaddress;\n        if(isAddressConfirm && !newAddress){\n            getaddress = addresses.find(address => address._id === selectedAddress);\n        }else{\n            getaddress = this.state.address;\n        }\n\n        return (\n            <React.Fragment>\n                <Header />\n                <div className=\"Content\">\n                    <div className=\"PlaceOrderWrapper\">\n\n                        \n                        <div className=\"DeliveryAddress\">\n\n                            <div className=\"Card\">\n                                <p className=\"CardText\">Login {userInfo ? <i className=\"fas fa-check\"></i> : null}</p>\n                                <p className=\"CardText\">Email: {userInfo.email}</p>\n                            </div>\n\n                            {\n                                isAddressConfirm ? \n                                 <div className=\"Card\">\n                                     <p className=\"CardText\">Adresse de livraison {isAddressConfirm ? <i className=\"fas fa-check\"></i> : null}</p>\n                                     <p>\n                                        <span>{`${getaddress.fullName} - ${getaddress.mobileNumber} - `}</span>\n                                        <span>{ `${getaddress.address}, ${getaddress.cityDistrictTown}, ${getaddress.state} - ${getaddress.pinCode}`}</span>\n                                        </p>\n                                 </div> :\n                                 <React.Fragment>\n                                <div className=\"Card\">\n                                    <h4>Adresse de livraison</h4>\n                                    {\n                                        addresses.length && addresses.map(address => \n                                            <DeliveryAddress \n                                                key={address._id} \n                                                onAddressSelection={addressSelector} \n                                                value={selectedAddress}\n                                                address={getaddress} />\n                                        )\n                                    }\n                                    {\n                                        existingAddress ?\n                                        <div className=\"DeliveryButtonContainer\" >\n                                            <button onClick={confirmDeliveryAddress} className=\"DeliveryAddressButton\">Livrer ici</button>\n                                        </div> : null\n                                    }\n                                    \n                                </div>\n                                <div className=\"Card\">\n                                    <div>\n                                        <RadioButton \n                                            name=\"address\"\n                                            label=\"Add new Address\"\n                                            value={selectedAddress}\n                                            onChange={newAddressSelection}\n                                        />\n                                    </div>\n                                    {\n                                        newAddress ? \n                                            <AddressForm\n                                                address={address}\n                                                inputHandler={inputHandler}\n                                                addressSubmitHandler={addressSubmitHandler}\n                                            /> : null\n                                    }\n                                    \n                                    \n                                </div>\n                                </React.Fragment>\n                            }\n                            \n                               \n\n                                {\n                                    isOrderConfirm ? \n                                    <div className=\"Card\">\n                                        <p className=\"CardText\">Résumé de la commande<i className=\"fas fa-check\"></i> </p>\n                                    </div> : \n                                     isAddressConfirm ? \n                                    <div className=\"Card\">\n                                        <h4 className=\"CardText\">Résumé de la commande</h4>\n                                        {\n                                             props.cart.cartItem.map(item => (\n                                                <div key={item.product} style={{display: 'flex', margin: '5px 0', alignItems: 'center'}}>\n                                                    <div style={{width: '60px', height: '60px', overflow: 'hidden', position: 'relative'}}>\n                                                        <img style={{maxWidth: '100%', maxHeight: '100%', position: 'absolute', left: '50%', transform: 'translateX(-50%)'}} src={item.imageUrl} alt=\"\" />\n                                                    </div>\n                                                    <div>\n                                                        <h5>{item.name}</h5>\n                                                        <h6>Quantity : {item.quantity}</h6>\n                                                        <h6>${item.total}</h6>\n                                                    </div>\n                                                </div>\n                                            ))\n                                        }\n                                        <button onClick={confirmOrder} className=\"ContinueButton\">Continue</button>\n                                    </div>\n                                 : null\n                                }\n                                \n                                {\n                                    this.state.isOrderConfirm ? \n                                    <div className=\"Card\">\n                                    <h4 className=\"CardText\">Option de paiement</h4>\n                                    <ul>\n                                        {\n                                            paymentTypes.map(payment => \n                                            <li className=\"paymentType\" key={payment.id}>\n                                                <RadioButton\n                                                    key={payment.id} \n                                                    name=\"paymentType\"\n                                                    label={payment.label}\n                                                    value={payment.value}\n                                                    onChange={selectPaymentOption}\n                                                />\n                                            </li>)\n                                        }\n                                    </ul>\n                                    {\n                                        selectedPaymentType !== 'cod' ? \n                                        <p className=\"ErrorMessage\">Désolé, seul le paiment en espèce à la livraison est disponible</p> : null\n                                    }\n                                    <button className=\"PaymentConfirm\" onClick={submitOrder}>Confirmer la commande</button>\n\n                                </div> : null\n                                }\n                              \n                        \n                            </div>\n\n                    <CartPrice />\n                            \n                    </div>\n\n      \n                </div>\n                \n            </React.Fragment>\n        );\n    }\n\nexport default PlaceOrder","C:\\projects\\NodeJS\\mdp\\frontend\\src\\components\\Header\\Header.js",["502","503","504","505","506","507","508","509"],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\containers\\Orders\\index.js",["510","511","512","513","514","515","516","517","518","519"],"import './style.css';\nimport Header from '../../components/Header/Header'\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {base_url} from '../../constants/index'\n\n\n\nconst Orders = (props) => {\n\n  const userSignin = useSelector(state => state.userSignin);\n  const { loading, userInfo, error } = userSignin\n  const [ordersList, setOrderList] = useState([])\n\n\n  useEffect(() => {\n    \n    if(!userInfo){\n        \n            if(userInfo.token){\n                getOrders()\n                console.log(\"standard user\")\n            }else{\n                props.history.push('/login');\n            }  \n        \n    }else{\n        if(userInfo.firstName == \"admin\"){\n            adminGetAllOrders()\n        }else{\n            getOrders()\n        }\n    \n    }\n    return () => {\n    };\n  }, [userInfo]);\n\n     const getOrders = () => {\n        console.log(userInfo)\n\n        fetch(`${base_url}/order/getorders/${userInfo._id}`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': userInfo.token\n            }\n        })\n        .then(response => response.json())\n        .then(jsonResponse => {\n            console.log(\"get orders: \"+jsonResponse.message);\n            console.log(\"responseorder: \"+JSON.stringify(jsonResponse.message));\n            \n            setOrderList(jsonResponse.message)\n        })\n        .catch(error => {\n            console.log(error);\n        })\n    }\n\n    /****get all orders for administration back office */\n    const adminGetAllOrders =  () => {\n\n        fetch(`${base_url}/order/getusers`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': userInfo.token\n            }\n        })\n        .then(response => response.json())\n        .then(jsonResponse => {\n           \n                jsonResponse.message.map(user => {\n                \n                fetch(`${base_url}/order/getorders/${user._id}`, {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'auth-token': userInfo.token\n                    }\n                })\n                .then(response => response.json())\n                .then(jsonResponse => {\n                    console.log(\"get all orders for admin: \"+jsonResponse.message);\n                   \n                   // setOrderList( prevState => setOrderList( prevState.ordersList.concat(jsonResponse.message) ))\n                })\n                .catch(error => {\n                    console.log(error);\n                }) \n            \n            })\n    \n        })\n        .catch(error => {\n            console.log(error);\n        })\n    }\n    \n\n    const formatDate = (date) => {\n        let d = new Date(date);\n        return `${d.getDate()}/${d.getMonth() + 1}/${d.getFullYear()}`;\n    }\n\n    const getOrderTotal = (id) => {\n        const singleOrder = ordersList.find(order => order._id === id);\n        let orderTotal = 0;\n        singleOrder.order.forEach(order => {\n            orderTotal = orderTotal + (order.price * order.quantity)\n        });\n\n        return orderTotal;\n    }\n\n\n    return (\n        <React.Fragment>\n            <Header />\n            <div className=\"Content\">\n                <div className=\"Card\">\n                    <p className=\"CardText\">Mes Commandes</p>\n\n                    {\n                        ordersList.map(order => {\n                            return (\n                                <div key={order._id} className=\"Order\">\n                                    <div className=\"OrderHeader\">\n                                        <a href=\"#\">{order._id}</a>\n                                    </div>\n                                    <div className=\"OrderDescription\">\n                                        <div className=\"od1\">\n                                            <p className=\"odtitle\">Adresse de livraison</p>\n                                            <p>{`${order.address.address} ${order.address.cityDistrictTown} ${order.address.state} - ${order.address.pinCode}`}</p>\n                                        </div>\n                                        <div className=\"od2\">\n                                            <p className=\"odtitle\">Type de paiement</p>\n                                            <a className=\"odp\" style={{color: \"white\"}}>{order.paymentType}</a>\n                                        </div>\n                                        <div className=\"od3\">\n                                            <p className=\"odtitle\" >Statut du paiment</p>\n                                            <a className=\"odp\" style={{color: \"white\"}}>{order.paymentStatus}</a>\n                                        </div>\n                                    \n                                    </div>\n                                    <div>\n                                        {order.order.map(item => (\n                                            <div key={item._id} style={{display: 'flex', alignItems: 'center', margin: '5px 0', borderBottom: '1px solid #cecece'}}>\n                                                <div style={{width: '80px', height: '80px', overflow: 'hidden', position: 'relative'}} className=\"ImageContainer\">\n                                                    <img style={{maxWidth: '100%', maxHeight: '100%', position: 'absolute', left: '50%', transform: 'translateX(-50%)'}} src={item.product.imageUrl}/>\n                                                </div>\n                                                <div>\n                                                    <p className=\"odtitle\">{item.product.name}</p>\n                                                    <div style={{fontSize: '14px', color: '#555', fontWeight: 'bold'}}>\n                                                    <p>Quantité: {item.quantity}</p>\n                                                    <p>{item.price * item.quantity}€</p>\n                                                    </div>\n                                                    \n                                                </div>\n                                            </div>\n                                        ))}\n                                    </div>\n                                    <div className=\"OrderFooter\">\n                                        <p>Commande passée le <span>{formatDate(order.orderDate)}</span></p>\n                                        <p>Total de la commande <span>{getOrderTotal(order._id)}€</span></p>\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n\n                </div>\n            </div>\n        </React.Fragment>\n    );\n    \n}\n\n\nexport default Orders","C:\\projects\\NodeJS\\mdp\\frontend\\src\\store\\reducers\\userReducers.js",[],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\PrivateRoute.js",["520"],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\components\\ShopStore\\Products\\Product\\index.js",["521","522","523"],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\constants\\productConstants.js",[],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\components\\ShopStore\\Products\\Products.js",["524","525","526"],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\components\\ShopStore\\ShopStore.js",["527","528","529","530","531"],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\containers\\Home\\index.js",["532","533"],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\components\\Error\\index.js",[],["534","535"],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\containers\\PlaceOrder\\AddressForm\\index.js",["536"],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\components\\QuantityControl\\index.js",[],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\store\\actions\\userActions.js",[],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\index.js",["537"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n{/**import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport store from './containers/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'));\n */}","C:\\projects\\NodeJS\\mdp\\frontend\\src\\constants\\cartConstants.js",[],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\constants\\userConstants.js",[],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\components\\UI\\MobileTypeInput\\index.js",[],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\containers\\ForgetPassword\\index.js",[],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\components\\UI\\NormalInput\\index.js",[],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\containers\\ControlPanel\\index.js",[],"C:\\projects\\NodeJS\\mdp\\frontend\\src\\containers\\ThankYou\\index.js",[],{"ruleId":"538","replacedBy":"539"},{"ruleId":"540","replacedBy":"541"},{"ruleId":"538","replacedBy":"542"},{"ruleId":"540","replacedBy":"543"},{"ruleId":"544","severity":1,"message":"545","line":15,"column":52,"nodeType":"546","messageId":"547","endLine":15,"endColumn":54},{"ruleId":"544","severity":1,"message":"548","line":34,"column":41,"nodeType":"546","messageId":"547","endLine":34,"endColumn":43},{"ruleId":"544","severity":1,"message":"545","line":42,"column":51,"nodeType":"546","messageId":"547","endLine":42,"endColumn":53},{"ruleId":"549","severity":1,"message":"550","line":91,"column":9,"nodeType":"551","messageId":"552","endLine":92,"endColumn":19},{"ruleId":"553","severity":1,"message":"554","line":2,"column":10,"nodeType":"555","messageId":"556","endLine":2,"endColumn":18},{"ruleId":"553","severity":1,"message":"557","line":4,"column":8,"nodeType":"555","messageId":"556","endLine":4,"endColumn":19},{"ruleId":"544","severity":1,"message":"545","line":72,"column":32,"nodeType":"546","messageId":"547","endLine":72,"endColumn":34},{"ruleId":"553","severity":1,"message":"558","line":2,"column":10,"nodeType":"555","messageId":"556","endLine":2,"endColumn":14},{"ruleId":"544","severity":1,"message":"545","line":32,"column":47,"nodeType":"546","messageId":"547","endLine":32,"endColumn":49},{"ruleId":"559","severity":1,"message":"560","line":80,"column":47,"nodeType":"561","messageId":"562","endLine":80,"endColumn":49},{"ruleId":"563","severity":1,"message":"564","line":137,"column":45,"nodeType":"565","endLine":137,"endColumn":57},{"ruleId":"563","severity":1,"message":"566","line":146,"column":49,"nodeType":"565","endLine":146,"endColumn":93},{"ruleId":"563","severity":1,"message":"566","line":150,"column":49,"nodeType":"565","endLine":150,"endColumn":93},{"ruleId":"567","severity":1,"message":"568","line":158,"column":57,"nodeType":"565","endLine":158,"endColumn":203},{"ruleId":"544","severity":1,"message":"545","line":23,"column":45,"nodeType":"546","messageId":"547","endLine":23,"endColumn":47},{"ruleId":"553","severity":1,"message":"569","line":16,"column":8,"nodeType":"555","messageId":"556","endLine":16,"endColumn":12},{"ruleId":"544","severity":1,"message":"545","line":11,"column":42,"nodeType":"546","messageId":"547","endLine":11,"endColumn":44},{"ruleId":"544","severity":1,"message":"545","line":24,"column":32,"nodeType":"546","messageId":"547","endLine":24,"endColumn":34},{"ruleId":"553","severity":1,"message":"570","line":65,"column":19,"nodeType":"555","messageId":"556","endLine":65,"endColumn":31},{"ruleId":"553","severity":1,"message":"571","line":1,"column":17,"nodeType":"555","messageId":"556","endLine":1,"endColumn":26},{"ruleId":"544","severity":1,"message":"545","line":39,"column":28,"nodeType":"546","messageId":"547","endLine":39,"endColumn":30},{"ruleId":"544","severity":1,"message":"545","line":36,"column":17,"nodeType":"546","messageId":"547","endLine":36,"endColumn":19},{"ruleId":"544","severity":1,"message":"548","line":99,"column":59,"nodeType":"546","messageId":"547","endLine":99,"endColumn":61},{"ruleId":"553","severity":1,"message":"572","line":6,"column":13,"nodeType":"555","messageId":"556","endLine":6,"endColumn":23},{"ruleId":"563","severity":1,"message":"564","line":27,"column":17,"nodeType":"565","endLine":27,"endColumn":29},{"ruleId":"553","severity":1,"message":"573","line":11,"column":8,"nodeType":"555","messageId":"556","endLine":11,"endColumn":13},{"ruleId":"553","severity":1,"message":"574","line":34,"column":10,"nodeType":"555","messageId":"556","endLine":34,"endColumn":19},{"ruleId":"553","severity":1,"message":"575","line":34,"column":21,"nodeType":"555","messageId":"556","endLine":34,"endColumn":33},{"ruleId":"553","severity":1,"message":"576","line":36,"column":10,"nodeType":"555","messageId":"556","endLine":36,"endColumn":20},{"ruleId":"553","severity":1,"message":"577","line":41,"column":10,"nodeType":"555","messageId":"556","endLine":41,"endColumn":17},{"ruleId":"553","severity":1,"message":"578","line":48,"column":14,"nodeType":"555","messageId":"556","endLine":48,"endColumn":25},{"ruleId":"553","severity":1,"message":"579","line":50,"column":12,"nodeType":"555","messageId":"556","endLine":50,"endColumn":21},{"ruleId":"553","severity":1,"message":"580","line":55,"column":14,"nodeType":"555","messageId":"556","endLine":55,"endColumn":27},{"ruleId":"553","severity":1,"message":"581","line":57,"column":12,"nodeType":"555","messageId":"556","endLine":57,"endColumn":23},{"ruleId":"582","severity":1,"message":"583","line":69,"column":6,"nodeType":"584","endLine":69,"endColumn":34,"suggestions":"585"},{"ruleId":"559","severity":1,"message":"560","line":110,"column":26,"nodeType":"561","messageId":"562","endLine":110,"endColumn":28},{"ruleId":"544","severity":1,"message":"545","line":112,"column":20,"nodeType":"546","messageId":"547","endLine":112,"endColumn":22},{"ruleId":"559","severity":1,"message":"560","line":124,"column":26,"nodeType":"561","messageId":"562","endLine":124,"endColumn":28},{"ruleId":"559","severity":1,"message":"560","line":126,"column":28,"nodeType":"561","messageId":"562","endLine":126,"endColumn":30},{"ruleId":"544","severity":1,"message":"545","line":127,"column":21,"nodeType":"546","messageId":"547","endLine":127,"endColumn":23},{"ruleId":"538","replacedBy":"586"},{"ruleId":"540","replacedBy":"587"},{"ruleId":"553","severity":1,"message":"588","line":17,"column":10,"nodeType":"555","messageId":"556","endLine":17,"endColumn":17},{"ruleId":"582","severity":1,"message":"589","line":29,"column":6,"nodeType":"584","endLine":29,"endColumn":16,"suggestions":"590"},{"ruleId":"553","severity":1,"message":"591","line":1,"column":28,"nodeType":"555","messageId":"556","endLine":1,"endColumn":36},{"ruleId":"553","severity":1,"message":"592","line":8,"column":10,"nodeType":"555","messageId":"556","endLine":8,"endColumn":19},{"ruleId":"553","severity":1,"message":"593","line":8,"column":21,"nodeType":"555","messageId":"556","endLine":8,"endColumn":31},{"ruleId":"553","severity":1,"message":"594","line":15,"column":21,"nodeType":"555","messageId":"556","endLine":15,"endColumn":32},{"ruleId":"553","severity":1,"message":"595","line":15,"column":34,"nodeType":"555","messageId":"556","endLine":15,"endColumn":43},{"ruleId":"553","severity":1,"message":"577","line":18,"column":11,"nodeType":"555","messageId":"556","endLine":18,"endColumn":18},{"ruleId":"553","severity":1,"message":"596","line":18,"column":30,"nodeType":"555","messageId":"556","endLine":18,"endColumn":35},{"ruleId":"582","severity":1,"message":"597","line":31,"column":6,"nodeType":"584","endLine":31,"endColumn":8,"suggestions":"598"},{"ruleId":"544","severity":1,"message":"545","line":57,"column":28,"nodeType":"546","messageId":"547","endLine":57,"endColumn":30},{"ruleId":"553","severity":1,"message":"588","line":19,"column":10,"nodeType":"555","messageId":"556","endLine":19,"endColumn":17},{"ruleId":"582","severity":1,"message":"599","line":37,"column":6,"nodeType":"584","endLine":37,"endColumn":16,"suggestions":"600"},{"ruleId":"544","severity":1,"message":"545","line":34,"column":46,"nodeType":"546","messageId":"547","endLine":34,"endColumn":48},{"ruleId":"544","severity":1,"message":"545","line":48,"column":36,"nodeType":"546","messageId":"547","endLine":48,"endColumn":38},{"ruleId":"544","severity":1,"message":"545","line":68,"column":25,"nodeType":"546","messageId":"547","endLine":68,"endColumn":27},{"ruleId":"544","severity":1,"message":"545","line":119,"column":26,"nodeType":"546","messageId":"547","endLine":119,"endColumn":28},{"ruleId":"544","severity":1,"message":"545","line":182,"column":22,"nodeType":"546","messageId":"547","endLine":182,"endColumn":24},{"ruleId":"538","replacedBy":"601"},{"ruleId":"540","replacedBy":"602"},{"ruleId":"553","severity":1,"message":"591","line":3,"column":28,"nodeType":"555","messageId":"556","endLine":3,"endColumn":36},{"ruleId":"553","severity":1,"message":"603","line":6,"column":25,"nodeType":"555","messageId":"556","endLine":6,"endColumn":37},{"ruleId":"582","severity":1,"message":"604","line":19,"column":8,"nodeType":"584","endLine":19,"endColumn":10,"suggestions":"605"},{"ruleId":"553","severity":1,"message":"606","line":7,"column":8,"nodeType":"555","messageId":"556","endLine":7,"endColumn":22},{"ruleId":"553","severity":1,"message":"607","line":8,"column":8,"nodeType":"555","messageId":"556","endLine":8,"endColumn":20},{"ruleId":"553","severity":1,"message":"608","line":9,"column":8,"nodeType":"555","messageId":"556","endLine":9,"endColumn":22},{"ruleId":"553","severity":1,"message":"569","line":14,"column":8,"nodeType":"555","messageId":"556","endLine":14,"endColumn":12},{"ruleId":"553","severity":1,"message":"609","line":16,"column":8,"nodeType":"555","messageId":"556","endLine":16,"endColumn":18},{"ruleId":"553","severity":1,"message":"610","line":17,"column":8,"nodeType":"555","messageId":"556","endLine":17,"endColumn":16},{"ruleId":"553","severity":1,"message":"611","line":18,"column":8,"nodeType":"555","messageId":"556","endLine":18,"endColumn":14},{"ruleId":"553","severity":1,"message":"612","line":38,"column":7,"nodeType":"555","messageId":"556","endLine":38,"endColumn":16},{"ruleId":"553","severity":1,"message":"613","line":3,"column":17,"nodeType":"555","messageId":"556","endLine":3,"endColumn":26},{"ruleId":"553","severity":1,"message":"614","line":4,"column":18,"nodeType":"555","messageId":"556","endLine":4,"endColumn":24},{"ruleId":"544","severity":1,"message":"545","line":26,"column":28,"nodeType":"546","messageId":"547","endLine":26,"endColumn":30},{"ruleId":"553","severity":1,"message":"615","line":5,"column":10,"nodeType":"555","messageId":"556","endLine":5,"endColumn":21},{"ruleId":"553","severity":1,"message":"616","line":11,"column":13,"nodeType":"555","messageId":"556","endLine":11,"endColumn":21},{"ruleId":"553","severity":1,"message":"594","line":11,"column":23,"nodeType":"555","messageId":"556","endLine":11,"endColumn":34},{"ruleId":"553","severity":1,"message":"617","line":2,"column":8,"nodeType":"555","messageId":"556","endLine":2,"endColumn":14},{"ruleId":"553","severity":1,"message":"591","line":4,"column":28,"nodeType":"555","messageId":"556","endLine":4,"endColumn":36},{"ruleId":"553","severity":1,"message":"618","line":8,"column":9,"nodeType":"555","messageId":"556","endLine":8,"endColumn":16},{"ruleId":"553","severity":1,"message":"593","line":11,"column":21,"nodeType":"555","messageId":"556","endLine":11,"endColumn":31},{"ruleId":"553","severity":1,"message":"577","line":17,"column":20,"nodeType":"555","messageId":"556","endLine":17,"endColumn":27},{"ruleId":"553","severity":1,"message":"596","line":17,"column":29,"nodeType":"555","messageId":"556","endLine":17,"endColumn":34},{"ruleId":"553","severity":1,"message":"612","line":21,"column":11,"nodeType":"555","messageId":"556","endLine":21,"endColumn":20},{"ruleId":"553","severity":1,"message":"594","line":21,"column":22,"nodeType":"555","messageId":"556","endLine":21,"endColumn":33},{"ruleId":"553","severity":1,"message":"595","line":21,"column":35,"nodeType":"555","messageId":"556","endLine":21,"endColumn":44},{"ruleId":"582","severity":1,"message":"597","line":36,"column":6,"nodeType":"584","endLine":36,"endColumn":22,"suggestions":"619"},{"ruleId":"538","replacedBy":"620"},{"ruleId":"540","replacedBy":"621"},{"ruleId":"553","severity":1,"message":"622","line":3,"column":66,"nodeType":"555","messageId":"556","endLine":3,"endColumn":79},{"ruleId":"553","severity":1,"message":"623","line":39,"column":17,"nodeType":"555","messageId":"556","endLine":39,"endColumn":21},{"ruleId":"553","severity":1,"message":"616","line":71,"column":29,"nodeType":"555","messageId":"556","endLine":71,"endColumn":37},{"ruleId":"549","severity":1,"message":"550","line":94,"column":9,"nodeType":"551","messageId":"552","endLine":95,"endColumn":19},{"ruleId":"553","severity":1,"message":"573","line":10,"column":8,"nodeType":"555","messageId":"556","endLine":10,"endColumn":13},{"ruleId":"553","severity":1,"message":"574","line":32,"column":10,"nodeType":"555","messageId":"556","endLine":32,"endColumn":19},{"ruleId":"553","severity":1,"message":"575","line":32,"column":21,"nodeType":"555","messageId":"556","endLine":32,"endColumn":33},{"ruleId":"553","severity":1,"message":"576","line":34,"column":10,"nodeType":"555","messageId":"556","endLine":34,"endColumn":20},{"ruleId":"553","severity":1,"message":"596","line":38,"column":20,"nodeType":"555","messageId":"556","endLine":38,"endColumn":25},{"ruleId":"553","severity":1,"message":"577","line":41,"column":10,"nodeType":"555","messageId":"556","endLine":41,"endColumn":17},{"ruleId":"553","severity":1,"message":"578","line":48,"column":14,"nodeType":"555","messageId":"556","endLine":48,"endColumn":25},{"ruleId":"553","severity":1,"message":"579","line":50,"column":12,"nodeType":"555","messageId":"556","endLine":50,"endColumn":21},{"ruleId":"553","severity":1,"message":"580","line":55,"column":14,"nodeType":"555","messageId":"556","endLine":55,"endColumn":27},{"ruleId":"553","severity":1,"message":"581","line":57,"column":12,"nodeType":"555","messageId":"556","endLine":57,"endColumn":23},{"ruleId":"582","severity":1,"message":"624","line":69,"column":6,"nodeType":"584","endLine":69,"endColumn":34,"suggestions":"625"},{"ruleId":"559","severity":1,"message":"560","line":110,"column":26,"nodeType":"561","messageId":"562","endLine":110,"endColumn":28},{"ruleId":"544","severity":1,"message":"545","line":112,"column":20,"nodeType":"546","messageId":"547","endLine":112,"endColumn":22},{"ruleId":"559","severity":1,"message":"560","line":124,"column":26,"nodeType":"561","messageId":"562","endLine":124,"endColumn":28},{"ruleId":"559","severity":1,"message":"560","line":126,"column":28,"nodeType":"561","messageId":"562","endLine":126,"endColumn":30},{"ruleId":"544","severity":1,"message":"545","line":127,"column":21,"nodeType":"546","messageId":"547","endLine":127,"endColumn":23},{"ruleId":"553","severity":1,"message":"626","line":3,"column":23,"nodeType":"555","messageId":"556","endLine":3,"endColumn":34},{"ruleId":"553","severity":1,"message":"557","line":3,"column":8,"nodeType":"555","messageId":"556","endLine":3,"endColumn":19},{"ruleId":"553","severity":1,"message":"558","line":10,"column":10,"nodeType":"555","messageId":"556","endLine":10,"endColumn":14},{"ruleId":"553","severity":1,"message":"615","line":11,"column":23,"nodeType":"555","messageId":"556","endLine":11,"endColumn":34},{"ruleId":"553","severity":1,"message":"577","line":16,"column":13,"nodeType":"555","messageId":"556","endLine":16,"endColumn":20},{"ruleId":"553","severity":1,"message":"596","line":16,"column":32,"nodeType":"555","messageId":"556","endLine":16,"endColumn":37},{"ruleId":"553","severity":1,"message":"627","line":27,"column":12,"nodeType":"555","messageId":"556","endLine":27,"endColumn":17},{"ruleId":"553","severity":1,"message":"628","line":27,"column":19,"nodeType":"555","messageId":"556","endLine":27,"endColumn":27},{"ruleId":"553","severity":1,"message":"629","line":34,"column":26,"nodeType":"555","messageId":"556","endLine":34,"endColumn":41},{"ruleId":"553","severity":1,"message":"630","line":43,"column":11,"nodeType":"555","messageId":"556","endLine":43,"endColumn":23},{"ruleId":"544","severity":1,"message":"545","line":50,"column":32,"nodeType":"546","messageId":"547","endLine":50,"endColumn":34},{"ruleId":"631","severity":1,"message":"632","line":88,"column":21,"nodeType":"555","messageId":"633","endLine":88,"endColumn":28},{"ruleId":"631","severity":1,"message":"632","line":92,"column":22,"nodeType":"555","messageId":"633","endLine":92,"endColumn":29},{"ruleId":"553","severity":1,"message":"592","line":7,"column":10,"nodeType":"555","messageId":"556","endLine":7,"endColumn":19},{"ruleId":"553","severity":1,"message":"593","line":7,"column":21,"nodeType":"555","messageId":"556","endLine":7,"endColumn":31},{"ruleId":"553","severity":1,"message":"614","line":10,"column":18,"nodeType":"555","messageId":"556","endLine":10,"endColumn":24},{"ruleId":"553","severity":1,"message":"577","line":15,"column":11,"nodeType":"555","messageId":"556","endLine":15,"endColumn":18},{"ruleId":"553","severity":1,"message":"596","line":15,"column":30,"nodeType":"555","messageId":"556","endLine":15,"endColumn":35},{"ruleId":"553","severity":1,"message":"616","line":17,"column":11,"nodeType":"555","messageId":"556","endLine":17,"endColumn":19},{"ruleId":"553","severity":1,"message":"594","line":17,"column":21,"nodeType":"555","messageId":"556","endLine":17,"endColumn":32},{"ruleId":"582","severity":1,"message":"597","line":24,"column":6,"nodeType":"584","endLine":24,"endColumn":8,"suggestions":"634"},{"ruleId":"553","severity":1,"message":"615","line":4,"column":23,"nodeType":"555","messageId":"556","endLine":4,"endColumn":34},{"ruleId":"553","severity":1,"message":"577","line":12,"column":11,"nodeType":"555","messageId":"556","endLine":12,"endColumn":18},{"ruleId":"553","severity":1,"message":"596","line":12,"column":30,"nodeType":"555","messageId":"556","endLine":12,"endColumn":35},{"ruleId":"544","severity":1,"message":"545","line":28,"column":31,"nodeType":"546","messageId":"547","endLine":28,"endColumn":33},{"ruleId":"582","severity":1,"message":"635","line":37,"column":6,"nodeType":"584","endLine":37,"endColumn":16,"suggestions":"636"},{"ruleId":"559","severity":1,"message":"560","line":72,"column":47,"nodeType":"561","messageId":"562","endLine":72,"endColumn":49},{"ruleId":"563","severity":1,"message":"564","line":127,"column":41,"nodeType":"565","endLine":127,"endColumn":53},{"ruleId":"563","severity":1,"message":"566","line":136,"column":45,"nodeType":"565","endLine":136,"endColumn":89},{"ruleId":"563","severity":1,"message":"566","line":140,"column":45,"nodeType":"565","endLine":140,"endColumn":89},{"ruleId":"567","severity":1,"message":"568","line":148,"column":53,"nodeType":"565","endLine":148,"endColumn":199},{"ruleId":"553","severity":1,"message":"615","line":3,"column":23,"nodeType":"555","messageId":"556","endLine":3,"endColumn":34},{"ruleId":"553","severity":1,"message":"637","line":2,"column":28,"nodeType":"555","messageId":"556","endLine":2,"endColumn":38},{"ruleId":"553","severity":1,"message":"638","line":8,"column":11,"nodeType":"555","messageId":"556","endLine":8,"endColumn":15},{"ruleId":"639","severity":1,"message":"640","line":12,"column":1,"nodeType":"641","messageId":"642","endLine":20,"endColumn":10},{"ruleId":"553","severity":1,"message":"643","line":5,"column":16,"nodeType":"555","messageId":"556","endLine":5,"endColumn":25},{"ruleId":"553","severity":1,"message":"577","line":18,"column":12,"nodeType":"555","messageId":"556","endLine":18,"endColumn":19},{"ruleId":"582","severity":1,"message":"604","line":36,"column":10,"nodeType":"584","endLine":36,"endColumn":29,"suggestions":"644"},{"ruleId":"553","severity":1,"message":"613","line":1,"column":17,"nodeType":"555","messageId":"556","endLine":1,"endColumn":26},{"ruleId":"553","severity":1,"message":"645","line":7,"column":8,"nodeType":"555","messageId":"556","endLine":7,"endColumn":22},{"ruleId":"553","severity":1,"message":"569","line":8,"column":8,"nodeType":"555","messageId":"556","endLine":8,"endColumn":12},{"ruleId":"553","severity":1,"message":"646","line":13,"column":12,"nodeType":"555","messageId":"556","endLine":13,"endColumn":25},{"ruleId":"553","severity":1,"message":"647","line":13,"column":27,"nodeType":"555","messageId":"556","endLine":13,"endColumn":43},{"ruleId":"553","severity":1,"message":"571","line":1,"column":17,"nodeType":"555","messageId":"556","endLine":1,"endColumn":26},{"ruleId":"553","severity":1,"message":"617","line":2,"column":8,"nodeType":"555","messageId":"556","endLine":2,"endColumn":14},{"ruleId":"538","replacedBy":"648"},{"ruleId":"540","replacedBy":"649"},{"ruleId":"553","severity":1,"message":"571","line":1,"column":17,"nodeType":"555","messageId":"556","endLine":1,"endColumn":26},{"ruleId":"639","severity":1,"message":"650","line":10,"column":1,"nodeType":"641","messageId":"651","endLine":21,"endColumn":5},"no-native-reassign",["652"],"no-negated-in-lhs",["653"],["652"],["653"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'NormalInput' is defined but never used.","'Link' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Home' is defined but never used.","'jsonResponse' is assigned a value but never used.","'Component' is defined but never used.","'authAtions' is defined but never used.","'axios' is defined but never used.","'uploading' is assigned a value but never used.","'setUploading' is assigned a value but never used.","'deleteItem' is assigned a value but never used.","'loading' is assigned a value but never used.","'loadingSave' is assigned a value but never used.","'errorSave' is assigned a value but never used.","'loadingDelete' is assigned a value but never used.","'errorDelete' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["654"],["652"],["653"],"'isError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["655"],"'useState' is defined but never used.","'addToCart' is defined but never used.","'updateCart' is defined but never used.","'totalAmount' is assigned a value but never used.","'cartCount' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'userInfo'. Either include them or remove the dependency array.",["656"],"React Hook useEffect has missing dependencies: 'error' and 'props.history'. Either include them or remove the dependency array.",["657"],["652"],["653"],"'listProducts' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["658"],"'ForgetPassword' is defined but never used.","'ControlPanel' is defined but never used.","'ProductDetails' is defined but never used.","'PlaceOrder' is defined but never used.","'ThankYou' is defined but never used.","'Orders' is defined but never used.","'cartItems' is assigned a value but never used.","'useEffect' is defined but never used.","'update' is defined but never used.","'useDispatch' is defined but never used.","'cartItem' is assigned a value but never used.","'Header' is defined but never used.","'usePath' is defined but never used.",["659"],["652"],["653"],"'CART_ADD_ITEM' is defined but never used.","'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'userInfo.token'. Either include them or remove the dependency array.",["660"],"'useSelector' is defined but never used.","'order' is assigned a value but never used.","'setOrder' is assigned a value but never used.","'setPaymentTypes' is assigned a value but never used.","'getAddresses' is assigned a value but never used.","no-use-before-define","'address' was used before it was defined.","usedBeforeDefined",["661"],"React Hook useEffect has missing dependencies: 'adminGetAllOrders', 'getOrders', and 'props.history'. Either include them or remove the dependency array.",["662"],"'useHistory' is defined but never used.","'path' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'useParams' is defined but never used.",["663"],"'ProductsScreen' is defined but never used.","'categoryTitle' is assigned a value but never used.","'setCategoryTitle' is assigned a value but never used.",["652"],["653"],"Block is redundant.","redundantBlock","no-global-assign","no-unsafe-negation",{"desc":"664","fix":"665"},{"desc":"666","fix":"667"},{"desc":"668","fix":"669"},{"desc":"670","fix":"671"},{"desc":"672","fix":"673"},{"desc":"674","fix":"675"},{"desc":"676","fix":"677"},{"desc":"668","fix":"678"},{"desc":"679","fix":"680"},{"desc":"681","fix":"682"},"Update the dependencies array to be: [successSave, successDelete, dispatch, token]",{"range":"683","text":"684"},"Update the dependencies array to be: [props.history, userInfo]",{"range":"685","text":"686"},"Update the dependencies array to be: [dispatch, userInfo]",{"range":"687","text":"688"},"Update the dependencies array to be: [error, props.history, userInfo]",{"range":"689","text":"690"},"Update the dependencies array to be: [dispatch]",{"range":"691","text":"692"},"Update the dependencies array to be: [slug, category, dispatch, userInfo]",{"range":"693","text":"694"},"Update the dependencies array to be: [successSave, successDelete, dispatch, userInfo.token]",{"range":"695","text":"696"},{"range":"697","text":"688"},"Update the dependencies array to be: [adminGetAllOrders, getOrders, props.history, userInfo]",{"range":"698","text":"699"},"Update the dependencies array to be: [slug, filter, url, dispatch]",{"range":"700","text":"701"},[2309,2337],"[successSave, successDelete, dispatch, token]",[940,950],"[props.history, userInfo]",[805,807],"[dispatch, userInfo]",[1292,1302],"[error, props.history, userInfo]",[508,510],"[dispatch]",[1149,1165],"[slug, category, dispatch, userInfo]",[2302,2330],"[successSave, successDelete, dispatch, userInfo.token]",[772,774],[849,859],"[adminGetAllOrders, getOrders, props.history, userInfo]",[1109,1128],"[slug, filter, url, dispatch]"]